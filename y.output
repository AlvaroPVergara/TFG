Terminals unused in grammar

    INTEGER
    REDUCE


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | '(' condicion
    7          | '(' bucle ')'
    8          | '(' llamada ')'
    9          | '(' deffuncion
   10          | '(' print ')'
   11          | '(' returnfrom ')'
   12          | '(' incf ')'
   13          | variable

   14 $@1: %empty

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   16 argumentosfun: %empty
   17              | variable argumentosfun

   18 returnfrom: RETURN '-' FROM IDENTIF expresion

   19 definicion: DEFVAR variable restodef
   20           | LET '(' '(' variable restodef ')' ')' instrucciones

   21 restodef: expresion
   22         | '(' MAKE '-' ARRAY expresion ')'

   23 asignacion: SETQ variable expresion
   24           | SETQ variable '(' condicion
   25           | SETF '(' AREF variable expresion ')' expresion

   26 condicion: IF expresion '(' PROGN instrucciones ')' restoif

   27 restoif: ')'
   28        | '(' PROGN instrucciones ')' ')'

   29 bucle: LOOP WHILE expresion DO instrucciones
   30      | DOTIMES '(' variable '(' LENGTH variable ')' variable ')' instrucciones

   31 llamada: IDENTIF argumentos

   32 argumentos: %empty
   33           | expresion argumentos

   34 print: PRINT restoprint

   35 restoprint: STRING
   36           | expresion

   37 incf: INCF variable '(' AREF variable expresion ')'

   38 expresion: operando
   39          | '(' '+' expresion expresion ')'
   40          | '(' '-' expresion expresion ')'
   41          | '(' '*' expresion expresion ')'
   42          | '(' '/' expresion expresion ')'
   43          | '(' AND expresion expresion ')'
   44          | '(' OR expresion expresion ')'
   45          | '(' '=' expresion expresion ')'
   46          | '(' '<' expresion expresion ')'
   47          | '(' '>' expresion expresion ')'
   48          | '(' LEQ expresion expresion ')'
   49          | '(' GEQ expresion expresion ')'
   50          | '(' NEQ expresion expresion ')'

   51 operando: NUMBER
   52         | variable

   53 variable: IDENTIF
   54         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 6 7 8 9 10 11 12 15 20 22 24 25 26 28 30 37 39 40 41 42 43 44 45 46 47 48 49 50
    ')' (41) 4 5 7 8 10 11 12 15 20 22 25 26 27 28 30 37 39 40 41 42 43 44 45 46 47 48 49 50
    '*' (42) 41 54
    '+' (43) 39
    '-' (45) 18 22 40
    '/' (47) 42
    '<' (60) 46
    '=' (61) 45
    '>' (62) 47
    error (256)
    NUMBER (258) 51
    IDENTIF (259) 15 18 31 53 54
    INTEGER (260)
    STRING (261) 35
    DEFVAR (262) 19
    SETQ (263) 23 24
    SETF (264) 25
    AREF (265) 25 37
    MAKE (266) 22
    ARRAY (267) 22
    LET (268) 20
    WHILE (269) 29
    LOOP (270) 29
    IF (271) 26
    PROGN (272) 26 28
    DO (273) 29
    PRINT (274) 34
    DEFUN (275) 15
    RETURN (276) 18
    FROM (277) 18
    AND (278) 43
    OR (279) 44
    LEQ (280) 48
    GEQ (281) 49
    NEQ (282) 50
    DOTIMES (283) 30
    LENGTH (284) 30
    INCF (285) 37
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 15 20 26 28 29 30
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 3
    deffuncion (45)
        on left: 15
        on right: 9
    $@1 (46)
        on left: 14
        on right: 15
    argumentosfun (47)
        on left: 16 17
        on right: 15 17
    returnfrom (48)
        on left: 18
        on right: 11
    definicion (49)
        on left: 19 20
        on right: 4
    restodef (50)
        on left: 21 22
        on right: 19 20
    asignacion (51)
        on left: 23 24 25
        on right: 5
    condicion (52)
        on left: 26
        on right: 6 24
    restoif (53)
        on left: 27 28
        on right: 26
    bucle (54)
        on left: 29 30
        on right: 7
    llamada (55)
        on left: 31
        on right: 8
    argumentos (56)
        on left: 32 33
        on right: 31 33
    print (57)
        on left: 34
        on right: 10
    restoprint (58)
        on left: 35 36
        on right: 34
    incf (59)
        on left: 37
        on right: 12
    expresion (60)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 18 21 22 23 25 26 29 33 36 37 39 40 41 42 43 44 45 46 47 48 49 50
    operando (61)
        on left: 51 52
        on right: 38
    variable (62)
        on left: 53 54
        on right: 13 17 19 20 23 24 25 30 37 52


State 0

    0 $accept: . axioma $end

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 4
    instrucciones  go to state 5
    sentencia      go to state 6
    variable       go to state 7


State 1

   53 variable: IDENTIF .

    $default  reduce using rule 53 (variable)


State 2

   54 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 8


State 3

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    6          | '(' . condicion
    7          | '(' . bucle ')'
    8          | '(' . llamada ')'
    9          | '(' . deffuncion
   10          | '(' . print ')'
   11          | '(' . returnfrom ')'
   12          | '(' . incf ')'

    IDENTIF  shift, and go to state 9
    DEFVAR   shift, and go to state 10
    SETQ     shift, and go to state 11
    SETF     shift, and go to state 12
    LET      shift, and go to state 13
    LOOP     shift, and go to state 14
    IF       shift, and go to state 15
    PRINT    shift, and go to state 16
    DEFUN    shift, and go to state 17
    RETURN   shift, and go to state 18
    DOTIMES  shift, and go to state 19
    INCF     shift, and go to state 20

    deffuncion  go to state 21
    returnfrom  go to state 22
    definicion  go to state 23
    asignacion  go to state 24
    condicion   go to state 25
    bucle       go to state 26
    llamada     go to state 27
    print       go to state 28
    incf        go to state 29


State 4

    0 $accept: axioma . $end

    $end  shift, and go to state 30


State 5

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 6

    3 instrucciones: sentencia . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 31
    sentencia      go to state 6
    variable       go to state 7


State 7

   13 sentencia: variable .

    $default  reduce using rule 13 (sentencia)


State 8

   54 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 32


State 9

   31 llamada: IDENTIF . argumentos

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    $default  reduce using rule 32 (argumentos)

    argumentos  go to state 35
    expresion   go to state 36
    operando    go to state 37
    variable    go to state 38


State 10

   19 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 39


State 11

   23 asignacion: SETQ . variable expresion
   24           | SETQ . variable '(' condicion

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 40


State 12

   25 asignacion: SETF . '(' AREF variable expresion ')' expresion

    '('  shift, and go to state 41


State 13

   20 definicion: LET . '(' '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 42


State 14

   29 bucle: LOOP . WHILE expresion DO instrucciones

    WHILE  shift, and go to state 43


State 15

   26 condicion: IF . expresion '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 44
    operando   go to state 37
    variable   go to state 38


State 16

   34 print: PRINT . restoprint

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    STRING   shift, and go to state 45
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    restoprint  go to state 46
    expresion   go to state 47
    operando    go to state 37
    variable    go to state 38


State 17

   15 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 48


State 18

   18 returnfrom: RETURN . '-' FROM IDENTIF expresion

    '-'  shift, and go to state 49


State 19

   30 bucle: DOTIMES . '(' variable '(' LENGTH variable ')' variable ')' instrucciones

    '('  shift, and go to state 50


State 20

   37 incf: INCF . variable '(' AREF variable expresion ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 51


State 21

    9 sentencia: '(' deffuncion .

    $default  reduce using rule 9 (sentencia)


State 22

   11 sentencia: '(' returnfrom . ')'

    ')'  shift, and go to state 52


State 23

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 53


State 24

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 54


State 25

    6 sentencia: '(' condicion .

    $default  reduce using rule 6 (sentencia)


State 26

    7 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 55


State 27

    8 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 56


State 28

   10 sentencia: '(' print . ')'

    ')'  shift, and go to state 57


State 29

   12 sentencia: '(' incf . ')'

    ')'  shift, and go to state 58


State 30

    0 $accept: axioma $end .

    $default  accept


State 31

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 32

   54 variable: '*' IDENTIF '*' .

    $default  reduce using rule 54 (variable)


State 33

   51 operando: NUMBER .

    $default  reduce using rule 51 (operando)


State 34

   39 expresion: '(' . '+' expresion expresion ')'
   40          | '(' . '-' expresion expresion ')'
   41          | '(' . '*' expresion expresion ')'
   42          | '(' . '/' expresion expresion ')'
   43          | '(' . AND expresion expresion ')'
   44          | '(' . OR expresion expresion ')'
   45          | '(' . '=' expresion expresion ')'
   46          | '(' . '<' expresion expresion ')'
   47          | '(' . '>' expresion expresion ')'
   48          | '(' . LEQ expresion expresion ')'
   49          | '(' . GEQ expresion expresion ')'
   50          | '(' . NEQ expresion expresion ')'

    AND  shift, and go to state 59
    OR   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    NEQ  shift, and go to state 63
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '='  shift, and go to state 68
    '<'  shift, and go to state 69
    '>'  shift, and go to state 70


State 35

   31 llamada: IDENTIF argumentos .

    $default  reduce using rule 31 (llamada)


State 36

   33 argumentos: expresion . argumentos

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    $default  reduce using rule 32 (argumentos)

    argumentos  go to state 71
    expresion   go to state 36
    operando    go to state 37
    variable    go to state 38


State 37

   38 expresion: operando .

    $default  reduce using rule 38 (expresion)


State 38

   52 operando: variable .

    $default  reduce using rule 52 (operando)


State 39

   19 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 72

    restodef   go to state 73
    expresion  go to state 74
    operando   go to state 37
    variable   go to state 38


State 40

   23 asignacion: SETQ variable . expresion
   24           | SETQ variable . '(' condicion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 75

    expresion  go to state 76
    operando   go to state 37
    variable   go to state 38


State 41

   25 asignacion: SETF '(' . AREF variable expresion ')' expresion

    AREF  shift, and go to state 77


State 42

   20 definicion: LET '(' . '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 78


State 43

   29 bucle: LOOP WHILE . expresion DO instrucciones

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 79
    operando   go to state 37
    variable   go to state 38


State 44

   26 condicion: IF expresion . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 80


State 45

   35 restoprint: STRING .

    $default  reduce using rule 35 (restoprint)


State 46

   34 print: PRINT restoprint .

    $default  reduce using rule 34 (print)


State 47

   36 restoprint: expresion .

    $default  reduce using rule 36 (restoprint)


State 48

   15 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 14 ($@1)

    $@1  go to state 81


State 49

   18 returnfrom: RETURN '-' . FROM IDENTIF expresion

    FROM  shift, and go to state 82


State 50

   30 bucle: DOTIMES '(' . variable '(' LENGTH variable ')' variable ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 83


State 51

   37 incf: INCF variable . '(' AREF variable expresion ')'

    '('  shift, and go to state 84


State 52

   11 sentencia: '(' returnfrom ')' .

    $default  reduce using rule 11 (sentencia)


State 53

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 54

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 55

    7 sentencia: '(' bucle ')' .

    $default  reduce using rule 7 (sentencia)


State 56

    8 sentencia: '(' llamada ')' .

    $default  reduce using rule 8 (sentencia)


State 57

   10 sentencia: '(' print ')' .

    $default  reduce using rule 10 (sentencia)


State 58

   12 sentencia: '(' incf ')' .

    $default  reduce using rule 12 (sentencia)


State 59

   43 expresion: '(' AND . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 85
    operando   go to state 37
    variable   go to state 38


State 60

   44 expresion: '(' OR . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 86
    operando   go to state 37
    variable   go to state 38


State 61

   48 expresion: '(' LEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 87
    operando   go to state 37
    variable   go to state 38


State 62

   49 expresion: '(' GEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 88
    operando   go to state 37
    variable   go to state 38


State 63

   50 expresion: '(' NEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 89
    operando   go to state 37
    variable   go to state 38


State 64

   39 expresion: '(' '+' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 90
    operando   go to state 37
    variable   go to state 38


State 65

   40 expresion: '(' '-' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 91
    operando   go to state 37
    variable   go to state 38


State 66

   41 expresion: '(' '*' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 92
    operando   go to state 37
    variable   go to state 38


State 67

   42 expresion: '(' '/' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 93
    operando   go to state 37
    variable   go to state 38


State 68

   45 expresion: '(' '=' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 94
    operando   go to state 37
    variable   go to state 38


State 69

   46 expresion: '(' '<' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 95
    operando   go to state 37
    variable   go to state 38


State 70

   47 expresion: '(' '>' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 96
    operando   go to state 37
    variable   go to state 38


State 71

   33 argumentos: expresion argumentos .

    $default  reduce using rule 33 (argumentos)


State 72

   22 restodef: '(' . MAKE '-' ARRAY expresion ')'
   39 expresion: '(' . '+' expresion expresion ')'
   40          | '(' . '-' expresion expresion ')'
   41          | '(' . '*' expresion expresion ')'
   42          | '(' . '/' expresion expresion ')'
   43          | '(' . AND expresion expresion ')'
   44          | '(' . OR expresion expresion ')'
   45          | '(' . '=' expresion expresion ')'
   46          | '(' . '<' expresion expresion ')'
   47          | '(' . '>' expresion expresion ')'
   48          | '(' . LEQ expresion expresion ')'
   49          | '(' . GEQ expresion expresion ')'
   50          | '(' . NEQ expresion expresion ')'

    MAKE  shift, and go to state 97
    AND   shift, and go to state 59
    OR    shift, and go to state 60
    LEQ   shift, and go to state 61
    GEQ   shift, and go to state 62
    NEQ   shift, and go to state 63
    '+'   shift, and go to state 64
    '-'   shift, and go to state 65
    '*'   shift, and go to state 66
    '/'   shift, and go to state 67
    '='   shift, and go to state 68
    '<'   shift, and go to state 69
    '>'   shift, and go to state 70


State 73

   19 definicion: DEFVAR variable restodef .

    $default  reduce using rule 19 (definicion)


State 74

   21 restodef: expresion .

    $default  reduce using rule 21 (restodef)


State 75

   24 asignacion: SETQ variable '(' . condicion
   39 expresion: '(' . '+' expresion expresion ')'
   40          | '(' . '-' expresion expresion ')'
   41          | '(' . '*' expresion expresion ')'
   42          | '(' . '/' expresion expresion ')'
   43          | '(' . AND expresion expresion ')'
   44          | '(' . OR expresion expresion ')'
   45          | '(' . '=' expresion expresion ')'
   46          | '(' . '<' expresion expresion ')'
   47          | '(' . '>' expresion expresion ')'
   48          | '(' . LEQ expresion expresion ')'
   49          | '(' . GEQ expresion expresion ')'
   50          | '(' . NEQ expresion expresion ')'

    IF   shift, and go to state 15
    AND  shift, and go to state 59
    OR   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62
    NEQ  shift, and go to state 63
    '+'  shift, and go to state 64
    '-'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '='  shift, and go to state 68
    '<'  shift, and go to state 69
    '>'  shift, and go to state 70

    condicion  go to state 98


State 76

   23 asignacion: SETQ variable expresion .

    $default  reduce using rule 23 (asignacion)


State 77

   25 asignacion: SETF '(' AREF . variable expresion ')' expresion

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 99


State 78

   20 definicion: LET '(' '(' . variable restodef ')' ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 100


State 79

   29 bucle: LOOP WHILE expresion . DO instrucciones

    DO  shift, and go to state 101


State 80

   26 condicion: IF expresion '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 102


State 81

   15 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 103


State 82

   18 returnfrom: RETURN '-' FROM . IDENTIF expresion

    IDENTIF  shift, and go to state 104


State 83

   30 bucle: DOTIMES '(' variable . '(' LENGTH variable ')' variable ')' instrucciones

    '('  shift, and go to state 105


State 84

   37 incf: INCF variable '(' . AREF variable expresion ')'

    AREF  shift, and go to state 106


State 85

   43 expresion: '(' AND expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 107
    operando   go to state 37
    variable   go to state 38


State 86

   44 expresion: '(' OR expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 108
    operando   go to state 37
    variable   go to state 38


State 87

   48 expresion: '(' LEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 109
    operando   go to state 37
    variable   go to state 38


State 88

   49 expresion: '(' GEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 110
    operando   go to state 37
    variable   go to state 38


State 89

   50 expresion: '(' NEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 111
    operando   go to state 37
    variable   go to state 38


State 90

   39 expresion: '(' '+' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 112
    operando   go to state 37
    variable   go to state 38


State 91

   40 expresion: '(' '-' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 113
    operando   go to state 37
    variable   go to state 38


State 92

   41 expresion: '(' '*' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 114
    operando   go to state 37
    variable   go to state 38


State 93

   42 expresion: '(' '/' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 115
    operando   go to state 37
    variable   go to state 38


State 94

   45 expresion: '(' '=' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 116
    operando   go to state 37
    variable   go to state 38


State 95

   46 expresion: '(' '<' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 117
    operando   go to state 37
    variable   go to state 38


State 96

   47 expresion: '(' '>' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 118
    operando   go to state 37
    variable   go to state 38


State 97

   22 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 119


State 98

   24 asignacion: SETQ variable '(' condicion .

    $default  reduce using rule 24 (asignacion)


State 99

   25 asignacion: SETF '(' AREF variable . expresion ')' expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 120
    operando   go to state 37
    variable   go to state 38


State 100

   20 definicion: LET '(' '(' variable . restodef ')' ')' instrucciones

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 72

    restodef   go to state 121
    expresion  go to state 74
    operando   go to state 37
    variable   go to state 38


State 101

   29 bucle: LOOP WHILE expresion DO . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 122
    sentencia      go to state 6
    variable       go to state 7


State 102

   26 condicion: IF expresion '(' PROGN . instrucciones ')' restoif

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 123
    sentencia      go to state 6
    variable       go to state 7


State 103

   15 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 16 (argumentosfun)

    argumentosfun  go to state 124
    variable       go to state 125


State 104

   18 returnfrom: RETURN '-' FROM IDENTIF . expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 126
    operando   go to state 37
    variable   go to state 38


State 105

   30 bucle: DOTIMES '(' variable '(' . LENGTH variable ')' variable ')' instrucciones

    LENGTH  shift, and go to state 127


State 106

   37 incf: INCF variable '(' AREF . variable expresion ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 128


State 107

   43 expresion: '(' AND expresion expresion . ')'

    ')'  shift, and go to state 129


State 108

   44 expresion: '(' OR expresion expresion . ')'

    ')'  shift, and go to state 130


State 109

   48 expresion: '(' LEQ expresion expresion . ')'

    ')'  shift, and go to state 131


State 110

   49 expresion: '(' GEQ expresion expresion . ')'

    ')'  shift, and go to state 132


State 111

   50 expresion: '(' NEQ expresion expresion . ')'

    ')'  shift, and go to state 133


State 112

   39 expresion: '(' '+' expresion expresion . ')'

    ')'  shift, and go to state 134


State 113

   40 expresion: '(' '-' expresion expresion . ')'

    ')'  shift, and go to state 135


State 114

   41 expresion: '(' '*' expresion expresion . ')'

    ')'  shift, and go to state 136


State 115

   42 expresion: '(' '/' expresion expresion . ')'

    ')'  shift, and go to state 137


State 116

   45 expresion: '(' '=' expresion expresion . ')'

    ')'  shift, and go to state 138


State 117

   46 expresion: '(' '<' expresion expresion . ')'

    ')'  shift, and go to state 139


State 118

   47 expresion: '(' '>' expresion expresion . ')'

    ')'  shift, and go to state 140


State 119

   22 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 141


State 120

   25 asignacion: SETF '(' AREF variable expresion . ')' expresion

    ')'  shift, and go to state 142


State 121

   20 definicion: LET '(' '(' variable restodef . ')' ')' instrucciones

    ')'  shift, and go to state 143


State 122

   29 bucle: LOOP WHILE expresion DO instrucciones .

    $default  reduce using rule 29 (bucle)


State 123

   26 condicion: IF expresion '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 144


State 124

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 145


State 125

   17 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 16 (argumentosfun)

    argumentosfun  go to state 146
    variable       go to state 125


State 126

   18 returnfrom: RETURN '-' FROM IDENTIF expresion .

    $default  reduce using rule 18 (returnfrom)


State 127

   30 bucle: DOTIMES '(' variable '(' LENGTH . variable ')' variable ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 147


State 128

   37 incf: INCF variable '(' AREF variable . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 148
    operando   go to state 37
    variable   go to state 38


State 129

   43 expresion: '(' AND expresion expresion ')' .

    $default  reduce using rule 43 (expresion)


State 130

   44 expresion: '(' OR expresion expresion ')' .

    $default  reduce using rule 44 (expresion)


State 131

   48 expresion: '(' LEQ expresion expresion ')' .

    $default  reduce using rule 48 (expresion)


State 132

   49 expresion: '(' GEQ expresion expresion ')' .

    $default  reduce using rule 49 (expresion)


State 133

   50 expresion: '(' NEQ expresion expresion ')' .

    $default  reduce using rule 50 (expresion)


State 134

   39 expresion: '(' '+' expresion expresion ')' .

    $default  reduce using rule 39 (expresion)


State 135

   40 expresion: '(' '-' expresion expresion ')' .

    $default  reduce using rule 40 (expresion)


State 136

   41 expresion: '(' '*' expresion expresion ')' .

    $default  reduce using rule 41 (expresion)


State 137

   42 expresion: '(' '/' expresion expresion ')' .

    $default  reduce using rule 42 (expresion)


State 138

   45 expresion: '(' '=' expresion expresion ')' .

    $default  reduce using rule 45 (expresion)


State 139

   46 expresion: '(' '<' expresion expresion ')' .

    $default  reduce using rule 46 (expresion)


State 140

   47 expresion: '(' '>' expresion expresion ')' .

    $default  reduce using rule 47 (expresion)


State 141

   22 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 149
    operando   go to state 37
    variable   go to state 38


State 142

   25 asignacion: SETF '(' AREF variable expresion ')' . expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 150
    operando   go to state 37
    variable   go to state 38


State 143

   20 definicion: LET '(' '(' variable restodef ')' . ')' instrucciones

    ')'  shift, and go to state 151


State 144

   26 condicion: IF expresion '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 152
    ')'  shift, and go to state 153

    restoif  go to state 154


State 145

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 155
    sentencia      go to state 6
    variable       go to state 7


State 146

   17 argumentosfun: variable argumentosfun .

    $default  reduce using rule 17 (argumentosfun)


State 147

   30 bucle: DOTIMES '(' variable '(' LENGTH variable . ')' variable ')' instrucciones

    ')'  shift, and go to state 156


State 148

   37 incf: INCF variable '(' AREF variable expresion . ')'

    ')'  shift, and go to state 157


State 149

   22 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 158


State 150

   25 asignacion: SETF '(' AREF variable expresion ')' expresion .

    $default  reduce using rule 25 (asignacion)


State 151

   20 definicion: LET '(' '(' variable restodef ')' ')' . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 159
    sentencia      go to state 6
    variable       go to state 7


State 152

   28 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 160


State 153

   27 restoif: ')' .

    $default  reduce using rule 27 (restoif)


State 154

   26 condicion: IF expresion '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 26 (condicion)


State 155

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 161


State 156

   30 bucle: DOTIMES '(' variable '(' LENGTH variable ')' . variable ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 162


State 157

   37 incf: INCF variable '(' AREF variable expresion ')' .

    $default  reduce using rule 37 (incf)


State 158

   22 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 22 (restodef)


State 159

   20 definicion: LET '(' '(' variable restodef ')' ')' instrucciones .

    $default  reduce using rule 20 (definicion)


State 160

   28 restoif: '(' PROGN . instrucciones ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 163
    sentencia      go to state 6
    variable       go to state 7


State 161

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 15 (deffuncion)


State 162

   30 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable . ')' instrucciones

    ')'  shift, and go to state 164


State 163

   28 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 165


State 164

   30 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable ')' . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 166
    sentencia      go to state 6
    variable       go to state 7


State 165

   28 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 167


State 166

   30 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable ')' instrucciones .

    $default  reduce using rule 30 (bucle)


State 167

   28 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 28 (restoif)
