Terminals unused in grammar

    INTEGER
    DOTIMES
    LENGTH
    INCF
    REDUCE


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | '(' condicion
    7          | '(' bucle ')'
    8          | '(' llamada ')'
    9          | '(' deffuncion
   10          | PRINT STRING
   11          | '(' returnfrom ')'

   12 $@1: %empty

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   14 argumentosfun: %empty
   15              | variable argumentosfun

   16 returnfrom: RETURN '-' FROM IDENTIF expresion

   17 definicion: DEFVAR variable restodef
   18           | LET '(' '(' variable restodef ')' ')' instrucciones

   19 restodef: expresion
   20         | '(' MAKE '-' ARRAY expresion ')'

   21 asignacion: SETQ variable expresion
   22           | SETF '(' AREF variable expresion ')' expresion

   23 condicion: IF expresion '(' PROGN instrucciones ')' restoif

   24 restoif: ')'
   25        | '(' PROGN instrucciones ')' ')'

   26 bucle: LOOP WHILE expresion DO instrucciones

   27 llamada: IDENTIF argumentos

   28 argumentos: %empty
   29           | expresion argumentos

   30 expresion: operando
   31          | '(' '+' expresion expresion ')'
   32          | '(' '-' expresion expresion ')'
   33          | '(' '*' expresion expresion ')'
   34          | '(' '/' expresion expresion ')'
   35          | '(' AND expresion expresion ')'
   36          | '(' OR expresion expresion ')'
   37          | '(' '=' expresion expresion ')'
   38          | '(' '<' expresion expresion ')'
   39          | '(' '>' expresion expresion ')'
   40          | '(' LEQ expresion expresion ')'
   41          | '(' GEQ expresion expresion ')'
   42          | '(' NEQ expresion expresion ')'

   43 operando: NUMBER
   44         | variable

   45 variable: IDENTIF
   46         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 6 7 8 9 11 13 18 20 22 23 25 31 32 33 34 35 36 37 38 39 40 41 42
    ')' (41) 4 5 7 8 11 13 18 20 22 23 24 25 31 32 33 34 35 36 37 38 39 40 41 42
    '*' (42) 33 46
    '+' (43) 31
    '-' (45) 16 20 32
    '/' (47) 34
    '<' (60) 38
    '=' (61) 37
    '>' (62) 39
    error (256)
    NUMBER (258) 43
    IDENTIF (259) 13 16 27 45 46
    INTEGER (260)
    STRING (261) 10
    DEFVAR (262) 17
    SETQ (263) 21
    SETF (264) 22
    AREF (265) 22
    MAKE (266) 20
    ARRAY (267) 20
    LET (268) 18
    WHILE (269) 26
    LOOP (270) 26
    IF (271) 23
    PROGN (272) 23 25
    DO (273) 26
    PRINT (274) 10
    DEFUN (275) 13
    RETURN (276) 16
    FROM (277) 16
    AND (278) 35
    OR (279) 36
    LEQ (280) 40
    GEQ (281) 41
    NEQ (282) 42
    DOTIMES (283)
    LENGTH (284)
    INCF (285)
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 13 18 23 25 26
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    deffuncion (45)
        on left: 13
        on right: 9
    $@1 (46)
        on left: 12
        on right: 13
    argumentosfun (47)
        on left: 14 15
        on right: 13 15
    returnfrom (48)
        on left: 16
        on right: 11
    definicion (49)
        on left: 17 18
        on right: 4
    restodef (50)
        on left: 19 20
        on right: 17 18
    asignacion (51)
        on left: 21 22
        on right: 5
    condicion (52)
        on left: 23
        on right: 6
    restoif (53)
        on left: 24 25
        on right: 23
    bucle (54)
        on left: 26
        on right: 7
    llamada (55)
        on left: 27
        on right: 8
    argumentos (56)
        on left: 28 29
        on right: 27 29
    expresion (57)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 16 19 20 21 22 23 26 29 31 32 33 34 35 36 37 38 39 40 41 42
    operando (58)
        on left: 43 44
        on right: 30
    variable (59)
        on left: 45 46
        on right: 15 17 18 21 22 44


State 0

    0 $accept: . axioma $end

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 3
    instrucciones  go to state 4
    sentencia      go to state 5


State 1

   10 sentencia: PRINT . STRING

    STRING  shift, and go to state 6


State 2

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    6          | '(' . condicion
    7          | '(' . bucle ')'
    8          | '(' . llamada ')'
    9          | '(' . deffuncion
   11          | '(' . returnfrom ')'

    IDENTIF  shift, and go to state 7
    DEFVAR   shift, and go to state 8
    SETQ     shift, and go to state 9
    SETF     shift, and go to state 10
    LET      shift, and go to state 11
    LOOP     shift, and go to state 12
    IF       shift, and go to state 13
    DEFUN    shift, and go to state 14
    RETURN   shift, and go to state 15

    deffuncion  go to state 16
    returnfrom  go to state 17
    definicion  go to state 18
    asignacion  go to state 19
    condicion   go to state 20
    bucle       go to state 21
    llamada     go to state 22


State 3

    0 $accept: axioma . $end

    $end  shift, and go to state 23


State 4

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 5

    3 instrucciones: sentencia . instrucciones

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 24
    sentencia      go to state 5


State 6

   10 sentencia: PRINT STRING .

    $default  reduce using rule 10 (sentencia)


State 7

   27 llamada: IDENTIF . argumentos

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    $default  reduce using rule 28 (argumentos)

    argumentos  go to state 29
    expresion   go to state 30
    operando    go to state 31
    variable    go to state 32


State 8

   17 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 33


State 9

   21 asignacion: SETQ . variable expresion

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 34


State 10

   22 asignacion: SETF . '(' AREF variable expresion ')' expresion

    '('  shift, and go to state 35


State 11

   18 definicion: LET . '(' '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 36


State 12

   26 bucle: LOOP . WHILE expresion DO instrucciones

    WHILE  shift, and go to state 37


State 13

   23 condicion: IF . expresion '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 38
    operando   go to state 31
    variable   go to state 32


State 14

   13 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 39


State 15

   16 returnfrom: RETURN . '-' FROM IDENTIF expresion

    '-'  shift, and go to state 40


State 16

    9 sentencia: '(' deffuncion .

    $default  reduce using rule 9 (sentencia)


State 17

   11 sentencia: '(' returnfrom . ')'

    ')'  shift, and go to state 41


State 18

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 42


State 19

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 43


State 20

    6 sentencia: '(' condicion .

    $default  reduce using rule 6 (sentencia)


State 21

    7 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 44


State 22

    8 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 45


State 23

    0 $accept: axioma $end .

    $default  accept


State 24

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 25

   43 operando: NUMBER .

    $default  reduce using rule 43 (operando)


State 26

   45 variable: IDENTIF .

    $default  reduce using rule 45 (variable)


State 27

   46 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 46


State 28

   31 expresion: '(' . '+' expresion expresion ')'
   32          | '(' . '-' expresion expresion ')'
   33          | '(' . '*' expresion expresion ')'
   34          | '(' . '/' expresion expresion ')'
   35          | '(' . AND expresion expresion ')'
   36          | '(' . OR expresion expresion ')'
   37          | '(' . '=' expresion expresion ')'
   38          | '(' . '<' expresion expresion ')'
   39          | '(' . '>' expresion expresion ')'
   40          | '(' . LEQ expresion expresion ')'
   41          | '(' . GEQ expresion expresion ')'
   42          | '(' . NEQ expresion expresion ')'

    AND  shift, and go to state 47
    OR   shift, and go to state 48
    LEQ  shift, and go to state 49
    GEQ  shift, and go to state 50
    NEQ  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '='  shift, and go to state 56
    '<'  shift, and go to state 57
    '>'  shift, and go to state 58


State 29

   27 llamada: IDENTIF argumentos .

    $default  reduce using rule 27 (llamada)


State 30

   29 argumentos: expresion . argumentos

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    $default  reduce using rule 28 (argumentos)

    argumentos  go to state 59
    expresion   go to state 30
    operando    go to state 31
    variable    go to state 32


State 31

   30 expresion: operando .

    $default  reduce using rule 30 (expresion)


State 32

   44 operando: variable .

    $default  reduce using rule 44 (operando)


State 33

   17 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 60

    restodef   go to state 61
    expresion  go to state 62
    operando   go to state 31
    variable   go to state 32


State 34

   21 asignacion: SETQ variable . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 63
    operando   go to state 31
    variable   go to state 32


State 35

   22 asignacion: SETF '(' . AREF variable expresion ')' expresion

    AREF  shift, and go to state 64


State 36

   18 definicion: LET '(' . '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 65


State 37

   26 bucle: LOOP WHILE . expresion DO instrucciones

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 66
    operando   go to state 31
    variable   go to state 32


State 38

   23 condicion: IF expresion . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 67


State 39

   13 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 68


State 40

   16 returnfrom: RETURN '-' . FROM IDENTIF expresion

    FROM  shift, and go to state 69


State 41

   11 sentencia: '(' returnfrom ')' .

    $default  reduce using rule 11 (sentencia)


State 42

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 43

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 44

    7 sentencia: '(' bucle ')' .

    $default  reduce using rule 7 (sentencia)


State 45

    8 sentencia: '(' llamada ')' .

    $default  reduce using rule 8 (sentencia)


State 46

   46 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 70


State 47

   35 expresion: '(' AND . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 71
    operando   go to state 31
    variable   go to state 32


State 48

   36 expresion: '(' OR . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 72
    operando   go to state 31
    variable   go to state 32


State 49

   40 expresion: '(' LEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 73
    operando   go to state 31
    variable   go to state 32


State 50

   41 expresion: '(' GEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 74
    operando   go to state 31
    variable   go to state 32


State 51

   42 expresion: '(' NEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 75
    operando   go to state 31
    variable   go to state 32


State 52

   31 expresion: '(' '+' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 76
    operando   go to state 31
    variable   go to state 32


State 53

   32 expresion: '(' '-' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 77
    operando   go to state 31
    variable   go to state 32


State 54

   33 expresion: '(' '*' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 78
    operando   go to state 31
    variable   go to state 32


State 55

   34 expresion: '(' '/' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 79
    operando   go to state 31
    variable   go to state 32


State 56

   37 expresion: '(' '=' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 80
    operando   go to state 31
    variable   go to state 32


State 57

   38 expresion: '(' '<' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 81
    operando   go to state 31
    variable   go to state 32


State 58

   39 expresion: '(' '>' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 82
    operando   go to state 31
    variable   go to state 32


State 59

   29 argumentos: expresion argumentos .

    $default  reduce using rule 29 (argumentos)


State 60

   20 restodef: '(' . MAKE '-' ARRAY expresion ')'
   31 expresion: '(' . '+' expresion expresion ')'
   32          | '(' . '-' expresion expresion ')'
   33          | '(' . '*' expresion expresion ')'
   34          | '(' . '/' expresion expresion ')'
   35          | '(' . AND expresion expresion ')'
   36          | '(' . OR expresion expresion ')'
   37          | '(' . '=' expresion expresion ')'
   38          | '(' . '<' expresion expresion ')'
   39          | '(' . '>' expresion expresion ')'
   40          | '(' . LEQ expresion expresion ')'
   41          | '(' . GEQ expresion expresion ')'
   42          | '(' . NEQ expresion expresion ')'

    MAKE  shift, and go to state 83
    AND   shift, and go to state 47
    OR    shift, and go to state 48
    LEQ   shift, and go to state 49
    GEQ   shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '-'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '='   shift, and go to state 56
    '<'   shift, and go to state 57
    '>'   shift, and go to state 58


State 61

   17 definicion: DEFVAR variable restodef .

    $default  reduce using rule 17 (definicion)


State 62

   19 restodef: expresion .

    $default  reduce using rule 19 (restodef)


State 63

   21 asignacion: SETQ variable expresion .

    $default  reduce using rule 21 (asignacion)


State 64

   22 asignacion: SETF '(' AREF . variable expresion ')' expresion

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 84


State 65

   18 definicion: LET '(' '(' . variable restodef ')' ')' instrucciones

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 85


State 66

   26 bucle: LOOP WHILE expresion . DO instrucciones

    DO  shift, and go to state 86


State 67

   23 condicion: IF expresion '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 87


State 68

   13 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 88


State 69

   16 returnfrom: RETURN '-' FROM . IDENTIF expresion

    IDENTIF  shift, and go to state 89


State 70

   46 variable: '*' IDENTIF '*' .

    $default  reduce using rule 46 (variable)


State 71

   35 expresion: '(' AND expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 90
    operando   go to state 31
    variable   go to state 32


State 72

   36 expresion: '(' OR expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 91
    operando   go to state 31
    variable   go to state 32


State 73

   40 expresion: '(' LEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 92
    operando   go to state 31
    variable   go to state 32


State 74

   41 expresion: '(' GEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 93
    operando   go to state 31
    variable   go to state 32


State 75

   42 expresion: '(' NEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 94
    operando   go to state 31
    variable   go to state 32


State 76

   31 expresion: '(' '+' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 95
    operando   go to state 31
    variable   go to state 32


State 77

   32 expresion: '(' '-' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 96
    operando   go to state 31
    variable   go to state 32


State 78

   33 expresion: '(' '*' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 97
    operando   go to state 31
    variable   go to state 32


State 79

   34 expresion: '(' '/' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 98
    operando   go to state 31
    variable   go to state 32


State 80

   37 expresion: '(' '=' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 99
    operando   go to state 31
    variable   go to state 32


State 81

   38 expresion: '(' '<' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 100
    operando   go to state 31
    variable   go to state 32


State 82

   39 expresion: '(' '>' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 101
    operando   go to state 31
    variable   go to state 32


State 83

   20 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 102


State 84

   22 asignacion: SETF '(' AREF variable . expresion ')' expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 103
    operando   go to state 31
    variable   go to state 32


State 85

   18 definicion: LET '(' '(' variable . restodef ')' ')' instrucciones

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 60

    restodef   go to state 104
    expresion  go to state 62
    operando   go to state 31
    variable   go to state 32


State 86

   26 bucle: LOOP WHILE expresion DO . instrucciones

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 105
    sentencia      go to state 5


State 87

   23 condicion: IF expresion '(' PROGN . instrucciones ')' restoif

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 106
    sentencia      go to state 5


State 88

   13 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 107
    variable       go to state 108


State 89

   16 returnfrom: RETURN '-' FROM IDENTIF . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 109
    operando   go to state 31
    variable   go to state 32


State 90

   35 expresion: '(' AND expresion expresion . ')'

    ')'  shift, and go to state 110


State 91

   36 expresion: '(' OR expresion expresion . ')'

    ')'  shift, and go to state 111


State 92

   40 expresion: '(' LEQ expresion expresion . ')'

    ')'  shift, and go to state 112


State 93

   41 expresion: '(' GEQ expresion expresion . ')'

    ')'  shift, and go to state 113


State 94

   42 expresion: '(' NEQ expresion expresion . ')'

    ')'  shift, and go to state 114


State 95

   31 expresion: '(' '+' expresion expresion . ')'

    ')'  shift, and go to state 115


State 96

   32 expresion: '(' '-' expresion expresion . ')'

    ')'  shift, and go to state 116


State 97

   33 expresion: '(' '*' expresion expresion . ')'

    ')'  shift, and go to state 117


State 98

   34 expresion: '(' '/' expresion expresion . ')'

    ')'  shift, and go to state 118


State 99

   37 expresion: '(' '=' expresion expresion . ')'

    ')'  shift, and go to state 119


State 100

   38 expresion: '(' '<' expresion expresion . ')'

    ')'  shift, and go to state 120


State 101

   39 expresion: '(' '>' expresion expresion . ')'

    ')'  shift, and go to state 121


State 102

   20 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 122


State 103

   22 asignacion: SETF '(' AREF variable expresion . ')' expresion

    ')'  shift, and go to state 123


State 104

   18 definicion: LET '(' '(' variable restodef . ')' ')' instrucciones

    ')'  shift, and go to state 124


State 105

   26 bucle: LOOP WHILE expresion DO instrucciones .

    $default  reduce using rule 26 (bucle)


State 106

   23 condicion: IF expresion '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 125


State 107

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 126


State 108

   15 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 127
    variable       go to state 108


State 109

   16 returnfrom: RETURN '-' FROM IDENTIF expresion .

    $default  reduce using rule 16 (returnfrom)


State 110

   35 expresion: '(' AND expresion expresion ')' .

    $default  reduce using rule 35 (expresion)


State 111

   36 expresion: '(' OR expresion expresion ')' .

    $default  reduce using rule 36 (expresion)


State 112

   40 expresion: '(' LEQ expresion expresion ')' .

    $default  reduce using rule 40 (expresion)


State 113

   41 expresion: '(' GEQ expresion expresion ')' .

    $default  reduce using rule 41 (expresion)


State 114

   42 expresion: '(' NEQ expresion expresion ')' .

    $default  reduce using rule 42 (expresion)


State 115

   31 expresion: '(' '+' expresion expresion ')' .

    $default  reduce using rule 31 (expresion)


State 116

   32 expresion: '(' '-' expresion expresion ')' .

    $default  reduce using rule 32 (expresion)


State 117

   33 expresion: '(' '*' expresion expresion ')' .

    $default  reduce using rule 33 (expresion)


State 118

   34 expresion: '(' '/' expresion expresion ')' .

    $default  reduce using rule 34 (expresion)


State 119

   37 expresion: '(' '=' expresion expresion ')' .

    $default  reduce using rule 37 (expresion)


State 120

   38 expresion: '(' '<' expresion expresion ')' .

    $default  reduce using rule 38 (expresion)


State 121

   39 expresion: '(' '>' expresion expresion ')' .

    $default  reduce using rule 39 (expresion)


State 122

   20 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 128
    operando   go to state 31
    variable   go to state 32


State 123

   22 asignacion: SETF '(' AREF variable expresion ')' . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 129
    operando   go to state 31
    variable   go to state 32


State 124

   18 definicion: LET '(' '(' variable restodef ')' . ')' instrucciones

    ')'  shift, and go to state 130


State 125

   23 condicion: IF expresion '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 131
    ')'  shift, and go to state 132

    restoif  go to state 133


State 126

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 134
    sentencia      go to state 5


State 127

   15 argumentosfun: variable argumentosfun .

    $default  reduce using rule 15 (argumentosfun)


State 128

   20 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 135


State 129

   22 asignacion: SETF '(' AREF variable expresion ')' expresion .

    $default  reduce using rule 22 (asignacion)


State 130

   18 definicion: LET '(' '(' variable restodef ')' ')' . instrucciones

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 136
    sentencia      go to state 5


State 131

   25 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 137


State 132

   24 restoif: ')' .

    $default  reduce using rule 24 (restoif)


State 133

   23 condicion: IF expresion '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 23 (condicion)


State 134

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 138


State 135

   20 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 20 (restodef)


State 136

   18 definicion: LET '(' '(' variable restodef ')' ')' instrucciones .

    $default  reduce using rule 18 (definicion)


State 137

   25 restoif: '(' PROGN . instrucciones ')' ')'

    PRINT  shift, and go to state 1
    '('    shift, and go to state 2

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 139
    sentencia      go to state 5


State 138

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 13 (deffuncion)


State 139

   25 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 140


State 140

   25 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 141


State 141

   25 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 25 (restoif)
