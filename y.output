Terminals unused in grammar

    INTEGER


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | '(' condicion
    7          | '(' bucle ')'
    8          | '(' llamada ')'
    9          | '(' deffuncion
   10          | '(' print ')'
   11          | '(' returnfrom ')'
   12          | '(' incf ')'
   13          | variable

   14 $@1: %empty

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   16 argumentosfun: %empty
   17              | variable argumentosfun

   18 returnfrom: RETURN '-' FROM IDENTIF expresion

   19 definicion: DEFVAR variable restodef

   20 $@2: %empty

   21 definicion: LET '(' '(' variable restodef ')' ')' $@2 instrucciones

   22 restodef: expresion
   23         | '(' MAKE '-' ARRAY expresion ')'

   24 asignacion: SETQ variable expresion
   25           | SETQ variable '(' invertir ')'
   26           | SETQ variable '(' condicion
   27           | SETF '(' AREF variable expresion ')' expresion
   28           | SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

   29 condicion: IF expresion '(' PROGN instrucciones ')' restoif

   30 restoif: ')'
   31        | '(' PROGN instrucciones ')' ')'

   32 bucle: LOOP WHILE expresion DO instrucciones
   33      | DOTIMES '(' variable '(' LENGTH variable ')' variable ')' instrucciones
   34      | DOTIMES '(' variable '(' LENGTH variable ')' ')' instrucciones

   35 llamada: IDENTIF argumentos

   36 argumentos: %empty
   37           | expresion argumentos

   38 print: PRINT restoprint

   39 restoprint: STRING
   40           | expresion

   41 incf: INCF variable '(' AREF variable expresion ')'

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST ')' ')' '\'' variable

   43 expresion: operando
   44          | '(' '+' expresion expresion ')'
   45          | '(' '-' expresion expresion ')'
   46          | '(' '*' expresion expresion ')'
   47          | '(' '/' expresion expresion ')'
   48          | '(' AND expresion expresion ')'
   49          | '(' OR expresion expresion ')'
   50          | '(' '=' expresion expresion ')'
   51          | '(' '<' expresion expresion ')'
   52          | '(' '>' expresion expresion ')'
   53          | '(' LEQ expresion expresion ')'
   54          | '(' GEQ expresion expresion ')'
   55          | '(' NEQ expresion expresion ')'

   56 operando: NUMBER
   57         | variable
   58         | '(' AREF variable expresion ')'

   59 variable: IDENTIF
   60         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 28
    '\'' (39) 28 42
    '(' (40) 4 5 6 7 8 9 10 11 12 15 21 23 25 26 27 28 29 31 33 34 41 42 44 45 46 47 48 49 50 51 52 53 54 55 58
    ')' (41) 4 5 7 8 10 11 12 15 21 23 25 27 28 29 30 31 33 34 41 42 44 45 46 47 48 49 50 51 52 53 54 55 58
    '*' (42) 28 46 60
    '+' (43) 28 44
    '-' (45) 18 23 45
    '/' (47) 47
    '<' (60) 51
    '=' (61) 50
    '>' (62) 52
    error (256)
    NUMBER (258) 56
    IDENTIF (259) 15 18 35 59 60
    INTEGER (260)
    STRING (261) 39
    DEFVAR (262) 19
    SETQ (263) 24 25 26 28
    SETF (264) 27
    AREF (265) 27 41 58
    MAKE (266) 23
    ARRAY (267) 23
    LET (268) 21
    WHILE (269) 32
    LOOP (270) 32
    IF (271) 29
    PROGN (272) 29 31
    DO (273) 32
    PRINT (274) 38
    DEFUN (275) 15
    RETURN (276) 18
    FROM (277) 18
    AND (278) 48
    OR (279) 49
    LEQ (280) 53
    GEQ (281) 54
    NEQ (282) 55
    DOTIMES (283) 33 34
    LENGTH (284) 33 34
    INCF (285) 41
    REDUCE (286) 28
    MAP (287) 28
    LIST (288) 28 42
    COERCE (289) 42
    REVERSE (290) 42


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    axioma (48)
        on left: 1
        on right: 0
    instrucciones (49)
        on left: 2 3
        on right: 1 3 15 21 29 31 32 33 34
    sentencia (50)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 3
    deffuncion (51)
        on left: 15
        on right: 9
    $@1 (52)
        on left: 14
        on right: 15
    argumentosfun (53)
        on left: 16 17
        on right: 15 17
    returnfrom (54)
        on left: 18
        on right: 11
    definicion (55)
        on left: 19 21
        on right: 4
    $@2 (56)
        on left: 20
        on right: 21
    restodef (57)
        on left: 22 23
        on right: 19 21
    asignacion (58)
        on left: 24 25 26 27 28
        on right: 5
    condicion (59)
        on left: 29
        on right: 6 26
    restoif (60)
        on left: 30 31
        on right: 29
    bucle (61)
        on left: 32 33 34
        on right: 7
    llamada (62)
        on left: 35
        on right: 8
    argumentos (63)
        on left: 36 37
        on right: 35 37
    print (64)
        on left: 38
        on right: 10
    restoprint (65)
        on left: 39 40
        on right: 38
    incf (66)
        on left: 41
        on right: 12
    invertir (67)
        on left: 42
        on right: 25
    expresion (68)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 18 22 23 24 27 29 32 37 40 41 44 45 46 47 48 49 50 51 52 53 54 55 58
    operando (69)
        on left: 56 57 58
        on right: 43
    variable (70)
        on left: 59 60
        on right: 13 17 19 21 24 25 26 27 28 33 34 41 42 57 58


State 0

    0 $accept: . axioma $end

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 4
    instrucciones  go to state 5
    sentencia      go to state 6
    variable       go to state 7


State 1

   59 variable: IDENTIF .

    $default  reduce using rule 59 (variable)


State 2

   60 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 8


State 3

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    6          | '(' . condicion
    7          | '(' . bucle ')'
    8          | '(' . llamada ')'
    9          | '(' . deffuncion
   10          | '(' . print ')'
   11          | '(' . returnfrom ')'
   12          | '(' . incf ')'

    IDENTIF  shift, and go to state 9
    DEFVAR   shift, and go to state 10
    SETQ     shift, and go to state 11
    SETF     shift, and go to state 12
    LET      shift, and go to state 13
    LOOP     shift, and go to state 14
    IF       shift, and go to state 15
    PRINT    shift, and go to state 16
    DEFUN    shift, and go to state 17
    RETURN   shift, and go to state 18
    DOTIMES  shift, and go to state 19
    INCF     shift, and go to state 20

    deffuncion  go to state 21
    returnfrom  go to state 22
    definicion  go to state 23
    asignacion  go to state 24
    condicion   go to state 25
    bucle       go to state 26
    llamada     go to state 27
    print       go to state 28
    incf        go to state 29


State 4

    0 $accept: axioma . $end

    $end  shift, and go to state 30


State 5

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 6

    3 instrucciones: sentencia . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 31
    sentencia      go to state 6
    variable       go to state 7


State 7

   13 sentencia: variable .

    $default  reduce using rule 13 (sentencia)


State 8

   60 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 32


State 9

   35 llamada: IDENTIF . argumentos

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    $default  reduce using rule 36 (argumentos)

    argumentos  go to state 35
    expresion   go to state 36
    operando    go to state 37
    variable    go to state 38


State 10

   19 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 39


State 11

   24 asignacion: SETQ . variable expresion
   25           | SETQ . variable '(' invertir ')'
   26           | SETQ . variable '(' condicion
   28           | SETQ . variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 40


State 12

   27 asignacion: SETF . '(' AREF variable expresion ')' expresion

    '('  shift, and go to state 41


State 13

   21 definicion: LET . '(' '(' variable restodef ')' ')' $@2 instrucciones

    '('  shift, and go to state 42


State 14

   32 bucle: LOOP . WHILE expresion DO instrucciones

    WHILE  shift, and go to state 43


State 15

   29 condicion: IF . expresion '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 44
    operando   go to state 37
    variable   go to state 38


State 16

   38 print: PRINT . restoprint

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    STRING   shift, and go to state 45
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    restoprint  go to state 46
    expresion   go to state 47
    operando    go to state 37
    variable    go to state 38


State 17

   15 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 48


State 18

   18 returnfrom: RETURN . '-' FROM IDENTIF expresion

    '-'  shift, and go to state 49


State 19

   33 bucle: DOTIMES . '(' variable '(' LENGTH variable ')' variable ')' instrucciones
   34      | DOTIMES . '(' variable '(' LENGTH variable ')' ')' instrucciones

    '('  shift, and go to state 50


State 20

   41 incf: INCF . variable '(' AREF variable expresion ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 51


State 21

    9 sentencia: '(' deffuncion .

    $default  reduce using rule 9 (sentencia)


State 22

   11 sentencia: '(' returnfrom . ')'

    ')'  shift, and go to state 52


State 23

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 53


State 24

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 54


State 25

    6 sentencia: '(' condicion .

    $default  reduce using rule 6 (sentencia)


State 26

    7 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 55


State 27

    8 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 56


State 28

   10 sentencia: '(' print . ')'

    ')'  shift, and go to state 57


State 29

   12 sentencia: '(' incf . ')'

    ')'  shift, and go to state 58


State 30

    0 $accept: axioma $end .

    $default  accept


State 31

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 32

   60 variable: '*' IDENTIF '*' .

    $default  reduce using rule 60 (variable)


State 33

   56 operando: NUMBER .

    $default  reduce using rule 56 (operando)


State 34

   44 expresion: '(' . '+' expresion expresion ')'
   45          | '(' . '-' expresion expresion ')'
   46          | '(' . '*' expresion expresion ')'
   47          | '(' . '/' expresion expresion ')'
   48          | '(' . AND expresion expresion ')'
   49          | '(' . OR expresion expresion ')'
   50          | '(' . '=' expresion expresion ')'
   51          | '(' . '<' expresion expresion ')'
   52          | '(' . '>' expresion expresion ')'
   53          | '(' . LEQ expresion expresion ')'
   54          | '(' . GEQ expresion expresion ')'
   55          | '(' . NEQ expresion expresion ')'
   58 operando: '(' . AREF variable expresion ')'

    AREF  shift, and go to state 59
    AND   shift, and go to state 60
    OR    shift, and go to state 61
    LEQ   shift, and go to state 62
    GEQ   shift, and go to state 63
    NEQ   shift, and go to state 64
    '+'   shift, and go to state 65
    '-'   shift, and go to state 66
    '*'   shift, and go to state 67
    '/'   shift, and go to state 68
    '='   shift, and go to state 69
    '<'   shift, and go to state 70
    '>'   shift, and go to state 71


State 35

   35 llamada: IDENTIF argumentos .

    $default  reduce using rule 35 (llamada)


State 36

   37 argumentos: expresion . argumentos

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    $default  reduce using rule 36 (argumentos)

    argumentos  go to state 72
    expresion   go to state 36
    operando    go to state 37
    variable    go to state 38


State 37

   43 expresion: operando .

    $default  reduce using rule 43 (expresion)


State 38

   57 operando: variable .

    $default  reduce using rule 57 (operando)


State 39

   19 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 73

    restodef   go to state 74
    expresion  go to state 75
    operando   go to state 37
    variable   go to state 38


State 40

   24 asignacion: SETQ variable . expresion
   25           | SETQ variable . '(' invertir ')'
   26           | SETQ variable . '(' condicion
   28           | SETQ variable . '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 76

    expresion  go to state 77
    operando   go to state 37
    variable   go to state 38


State 41

   27 asignacion: SETF '(' . AREF variable expresion ')' expresion

    AREF  shift, and go to state 78


State 42

   21 definicion: LET '(' . '(' variable restodef ')' ')' $@2 instrucciones

    '('  shift, and go to state 79


State 43

   32 bucle: LOOP WHILE . expresion DO instrucciones

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 80
    operando   go to state 37
    variable   go to state 38


State 44

   29 condicion: IF expresion . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 81


State 45

   39 restoprint: STRING .

    $default  reduce using rule 39 (restoprint)


State 46

   38 print: PRINT restoprint .

    $default  reduce using rule 38 (print)


State 47

   40 restoprint: expresion .

    $default  reduce using rule 40 (restoprint)


State 48

   15 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 14 ($@1)

    $@1  go to state 82


State 49

   18 returnfrom: RETURN '-' . FROM IDENTIF expresion

    FROM  shift, and go to state 83


State 50

   33 bucle: DOTIMES '(' . variable '(' LENGTH variable ')' variable ')' instrucciones
   34      | DOTIMES '(' . variable '(' LENGTH variable ')' ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 84


State 51

   41 incf: INCF variable . '(' AREF variable expresion ')'

    '('  shift, and go to state 85


State 52

   11 sentencia: '(' returnfrom ')' .

    $default  reduce using rule 11 (sentencia)


State 53

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 54

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 55

    7 sentencia: '(' bucle ')' .

    $default  reduce using rule 7 (sentencia)


State 56

    8 sentencia: '(' llamada ')' .

    $default  reduce using rule 8 (sentencia)


State 57

   10 sentencia: '(' print ')' .

    $default  reduce using rule 10 (sentencia)


State 58

   12 sentencia: '(' incf ')' .

    $default  reduce using rule 12 (sentencia)


State 59

   58 operando: '(' AREF . variable expresion ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 86


State 60

   48 expresion: '(' AND . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 87
    operando   go to state 37
    variable   go to state 38


State 61

   49 expresion: '(' OR . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 88
    operando   go to state 37
    variable   go to state 38


State 62

   53 expresion: '(' LEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 89
    operando   go to state 37
    variable   go to state 38


State 63

   54 expresion: '(' GEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 90
    operando   go to state 37
    variable   go to state 38


State 64

   55 expresion: '(' NEQ . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 91
    operando   go to state 37
    variable   go to state 38


State 65

   44 expresion: '(' '+' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 92
    operando   go to state 37
    variable   go to state 38


State 66

   45 expresion: '(' '-' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 93
    operando   go to state 37
    variable   go to state 38


State 67

   46 expresion: '(' '*' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 94
    operando   go to state 37
    variable   go to state 38


State 68

   47 expresion: '(' '/' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 95
    operando   go to state 37
    variable   go to state 38


State 69

   50 expresion: '(' '=' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 96
    operando   go to state 37
    variable   go to state 38


State 70

   51 expresion: '(' '<' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 97
    operando   go to state 37
    variable   go to state 38


State 71

   52 expresion: '(' '>' . expresion expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 98
    operando   go to state 37
    variable   go to state 38


State 72

   37 argumentos: expresion argumentos .

    $default  reduce using rule 37 (argumentos)


State 73

   23 restodef: '(' . MAKE '-' ARRAY expresion ')'
   44 expresion: '(' . '+' expresion expresion ')'
   45          | '(' . '-' expresion expresion ')'
   46          | '(' . '*' expresion expresion ')'
   47          | '(' . '/' expresion expresion ')'
   48          | '(' . AND expresion expresion ')'
   49          | '(' . OR expresion expresion ')'
   50          | '(' . '=' expresion expresion ')'
   51          | '(' . '<' expresion expresion ')'
   52          | '(' . '>' expresion expresion ')'
   53          | '(' . LEQ expresion expresion ')'
   54          | '(' . GEQ expresion expresion ')'
   55          | '(' . NEQ expresion expresion ')'
   58 operando: '(' . AREF variable expresion ')'

    AREF  shift, and go to state 59
    MAKE  shift, and go to state 99
    AND   shift, and go to state 60
    OR    shift, and go to state 61
    LEQ   shift, and go to state 62
    GEQ   shift, and go to state 63
    NEQ   shift, and go to state 64
    '+'   shift, and go to state 65
    '-'   shift, and go to state 66
    '*'   shift, and go to state 67
    '/'   shift, and go to state 68
    '='   shift, and go to state 69
    '<'   shift, and go to state 70
    '>'   shift, and go to state 71


State 74

   19 definicion: DEFVAR variable restodef .

    $default  reduce using rule 19 (definicion)


State 75

   22 restodef: expresion .

    $default  reduce using rule 22 (restodef)


State 76

   25 asignacion: SETQ variable '(' . invertir ')'
   26           | SETQ variable '(' . condicion
   28           | SETQ variable '(' . REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'
   44 expresion: '(' . '+' expresion expresion ')'
   45          | '(' . '-' expresion expresion ')'
   46          | '(' . '*' expresion expresion ')'
   47          | '(' . '/' expresion expresion ')'
   48          | '(' . AND expresion expresion ')'
   49          | '(' . OR expresion expresion ')'
   50          | '(' . '=' expresion expresion ')'
   51          | '(' . '<' expresion expresion ')'
   52          | '(' . '>' expresion expresion ')'
   53          | '(' . LEQ expresion expresion ')'
   54          | '(' . GEQ expresion expresion ')'
   55          | '(' . NEQ expresion expresion ')'
   58 operando: '(' . AREF variable expresion ')'

    AREF    shift, and go to state 59
    IF      shift, and go to state 15
    AND     shift, and go to state 60
    OR      shift, and go to state 61
    LEQ     shift, and go to state 62
    GEQ     shift, and go to state 63
    NEQ     shift, and go to state 64
    REDUCE  shift, and go to state 100
    COERCE  shift, and go to state 101
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68
    '='     shift, and go to state 69
    '<'     shift, and go to state 70
    '>'     shift, and go to state 71

    condicion  go to state 102
    invertir   go to state 103


State 77

   24 asignacion: SETQ variable expresion .

    $default  reduce using rule 24 (asignacion)


State 78

   27 asignacion: SETF '(' AREF . variable expresion ')' expresion

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 104


State 79

   21 definicion: LET '(' '(' . variable restodef ')' ')' $@2 instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 105


State 80

   32 bucle: LOOP WHILE expresion . DO instrucciones

    DO  shift, and go to state 106


State 81

   29 condicion: IF expresion '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 107


State 82

   15 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 108


State 83

   18 returnfrom: RETURN '-' FROM . IDENTIF expresion

    IDENTIF  shift, and go to state 109


State 84

   33 bucle: DOTIMES '(' variable . '(' LENGTH variable ')' variable ')' instrucciones
   34      | DOTIMES '(' variable . '(' LENGTH variable ')' ')' instrucciones

    '('  shift, and go to state 110


State 85

   41 incf: INCF variable '(' . AREF variable expresion ')'

    AREF  shift, and go to state 111


State 86

   58 operando: '(' AREF variable . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 112
    operando   go to state 37
    variable   go to state 38


State 87

   48 expresion: '(' AND expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 113
    operando   go to state 37
    variable   go to state 38


State 88

   49 expresion: '(' OR expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 114
    operando   go to state 37
    variable   go to state 38


State 89

   53 expresion: '(' LEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 115
    operando   go to state 37
    variable   go to state 38


State 90

   54 expresion: '(' GEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 116
    operando   go to state 37
    variable   go to state 38


State 91

   55 expresion: '(' NEQ expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 117
    operando   go to state 37
    variable   go to state 38


State 92

   44 expresion: '(' '+' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 118
    operando   go to state 37
    variable   go to state 38


State 93

   45 expresion: '(' '-' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 119
    operando   go to state 37
    variable   go to state 38


State 94

   46 expresion: '(' '*' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 120
    operando   go to state 37
    variable   go to state 38


State 95

   47 expresion: '(' '/' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 121
    operando   go to state 37
    variable   go to state 38


State 96

   50 expresion: '(' '=' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 122
    operando   go to state 37
    variable   go to state 38


State 97

   51 expresion: '(' '<' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 123
    operando   go to state 37
    variable   go to state 38


State 98

   52 expresion: '(' '>' expresion . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 124
    operando   go to state 37
    variable   go to state 38


State 99

   23 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 125


State 100

   28 asignacion: SETQ variable '(' REDUCE . '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    '#'  shift, and go to state 126


State 101

   42 invertir: COERCE . '(' REVERSE '(' COERCE variable '\'' LIST ')' ')' '\'' variable

    '('  shift, and go to state 127


State 102

   26 asignacion: SETQ variable '(' condicion .

    $default  reduce using rule 26 (asignacion)


State 103

   25 asignacion: SETQ variable '(' invertir . ')'

    ')'  shift, and go to state 128


State 104

   27 asignacion: SETF '(' AREF variable . expresion ')' expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 129
    operando   go to state 37
    variable   go to state 38


State 105

   21 definicion: LET '(' '(' variable . restodef ')' ')' $@2 instrucciones

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 73

    restodef   go to state 130
    expresion  go to state 75
    operando   go to state 37
    variable   go to state 38


State 106

   32 bucle: LOOP WHILE expresion DO . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 131
    sentencia      go to state 6
    variable       go to state 7


State 107

   29 condicion: IF expresion '(' PROGN . instrucciones ')' restoif

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 132
    sentencia      go to state 6
    variable       go to state 7


State 108

   15 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 16 (argumentosfun)

    argumentosfun  go to state 133
    variable       go to state 134


State 109

   18 returnfrom: RETURN '-' FROM IDENTIF . expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 135
    operando   go to state 37
    variable   go to state 38


State 110

   33 bucle: DOTIMES '(' variable '(' . LENGTH variable ')' variable ')' instrucciones
   34      | DOTIMES '(' variable '(' . LENGTH variable ')' ')' instrucciones

    LENGTH  shift, and go to state 136


State 111

   41 incf: INCF variable '(' AREF . variable expresion ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 137


State 112

   58 operando: '(' AREF variable expresion . ')'

    ')'  shift, and go to state 138


State 113

   48 expresion: '(' AND expresion expresion . ')'

    ')'  shift, and go to state 139


State 114

   49 expresion: '(' OR expresion expresion . ')'

    ')'  shift, and go to state 140


State 115

   53 expresion: '(' LEQ expresion expresion . ')'

    ')'  shift, and go to state 141


State 116

   54 expresion: '(' GEQ expresion expresion . ')'

    ')'  shift, and go to state 142


State 117

   55 expresion: '(' NEQ expresion expresion . ')'

    ')'  shift, and go to state 143


State 118

   44 expresion: '(' '+' expresion expresion . ')'

    ')'  shift, and go to state 144


State 119

   45 expresion: '(' '-' expresion expresion . ')'

    ')'  shift, and go to state 145


State 120

   46 expresion: '(' '*' expresion expresion . ')'

    ')'  shift, and go to state 146


State 121

   47 expresion: '(' '/' expresion expresion . ')'

    ')'  shift, and go to state 147


State 122

   50 expresion: '(' '=' expresion expresion . ')'

    ')'  shift, and go to state 148


State 123

   51 expresion: '(' '<' expresion expresion . ')'

    ')'  shift, and go to state 149


State 124

   52 expresion: '(' '>' expresion expresion . ')'

    ')'  shift, and go to state 150


State 125

   23 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 151


State 126

   28 asignacion: SETQ variable '(' REDUCE '#' . '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    '\''  shift, and go to state 152


State 127

   42 invertir: COERCE '(' . REVERSE '(' COERCE variable '\'' LIST ')' ')' '\'' variable

    REVERSE  shift, and go to state 153


State 128

   25 asignacion: SETQ variable '(' invertir ')' .

    $default  reduce using rule 25 (asignacion)


State 129

   27 asignacion: SETF '(' AREF variable expresion . ')' expresion

    ')'  shift, and go to state 154


State 130

   21 definicion: LET '(' '(' variable restodef . ')' ')' $@2 instrucciones

    ')'  shift, and go to state 155


State 131

   32 bucle: LOOP WHILE expresion DO instrucciones .

    $default  reduce using rule 32 (bucle)


State 132

   29 condicion: IF expresion '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 156


State 133

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 157


State 134

   17 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 16 (argumentosfun)

    argumentosfun  go to state 158
    variable       go to state 134


State 135

   18 returnfrom: RETURN '-' FROM IDENTIF expresion .

    $default  reduce using rule 18 (returnfrom)


State 136

   33 bucle: DOTIMES '(' variable '(' LENGTH . variable ')' variable ')' instrucciones
   34      | DOTIMES '(' variable '(' LENGTH . variable ')' ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 159


State 137

   41 incf: INCF variable '(' AREF variable . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 160
    operando   go to state 37
    variable   go to state 38


State 138

   58 operando: '(' AREF variable expresion ')' .

    $default  reduce using rule 58 (operando)


State 139

   48 expresion: '(' AND expresion expresion ')' .

    $default  reduce using rule 48 (expresion)


State 140

   49 expresion: '(' OR expresion expresion ')' .

    $default  reduce using rule 49 (expresion)


State 141

   53 expresion: '(' LEQ expresion expresion ')' .

    $default  reduce using rule 53 (expresion)


State 142

   54 expresion: '(' GEQ expresion expresion ')' .

    $default  reduce using rule 54 (expresion)


State 143

   55 expresion: '(' NEQ expresion expresion ')' .

    $default  reduce using rule 55 (expresion)


State 144

   44 expresion: '(' '+' expresion expresion ')' .

    $default  reduce using rule 44 (expresion)


State 145

   45 expresion: '(' '-' expresion expresion ')' .

    $default  reduce using rule 45 (expresion)


State 146

   46 expresion: '(' '*' expresion expresion ')' .

    $default  reduce using rule 46 (expresion)


State 147

   47 expresion: '(' '/' expresion expresion ')' .

    $default  reduce using rule 47 (expresion)


State 148

   50 expresion: '(' '=' expresion expresion ')' .

    $default  reduce using rule 50 (expresion)


State 149

   51 expresion: '(' '<' expresion expresion ')' .

    $default  reduce using rule 51 (expresion)


State 150

   52 expresion: '(' '>' expresion expresion ')' .

    $default  reduce using rule 52 (expresion)


State 151

   23 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 161
    operando   go to state 37
    variable   go to state 38


State 152

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' . '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    '+'  shift, and go to state 162


State 153

   42 invertir: COERCE '(' REVERSE . '(' COERCE variable '\'' LIST ')' ')' '\'' variable

    '('  shift, and go to state 163


State 154

   27 asignacion: SETF '(' AREF variable expresion ')' . expresion

    NUMBER   shift, and go to state 33
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 34

    expresion  go to state 164
    operando   go to state 37
    variable   go to state 38


State 155

   21 definicion: LET '(' '(' variable restodef ')' . ')' $@2 instrucciones

    ')'  shift, and go to state 165


State 156

   29 condicion: IF expresion '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 166
    ')'  shift, and go to state 167

    restoif  go to state 168


State 157

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 169
    sentencia      go to state 6
    variable       go to state 7


State 158

   17 argumentosfun: variable argumentosfun .

    $default  reduce using rule 17 (argumentosfun)


State 159

   33 bucle: DOTIMES '(' variable '(' LENGTH variable . ')' variable ')' instrucciones
   34      | DOTIMES '(' variable '(' LENGTH variable . ')' ')' instrucciones

    ')'  shift, and go to state 170


State 160

   41 incf: INCF variable '(' AREF variable expresion . ')'

    ')'  shift, and go to state 171


State 161

   23 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 172


State 162

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' . '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    '('  shift, and go to state 173


State 163

   42 invertir: COERCE '(' REVERSE '(' . COERCE variable '\'' LIST ')' ')' '\'' variable

    COERCE  shift, and go to state 174


State 164

   27 asignacion: SETF '(' AREF variable expresion ')' expresion .

    $default  reduce using rule 27 (asignacion)


State 165

   21 definicion: LET '(' '(' variable restodef ')' ')' . $@2 instrucciones

    $default  reduce using rule 20 ($@2)

    $@2  go to state 175


State 166

   31 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 176


State 167

   30 restoif: ')' .

    $default  reduce using rule 30 (restoif)


State 168

   29 condicion: IF expresion '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 29 (condicion)


State 169

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 177


State 170

   33 bucle: DOTIMES '(' variable '(' LENGTH variable ')' . variable ')' instrucciones
   34      | DOTIMES '(' variable '(' LENGTH variable ')' . ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    ')'      shift, and go to state 178

    variable  go to state 179


State 171

   41 incf: INCF variable '(' AREF variable expresion ')' .

    $default  reduce using rule 41 (incf)


State 172

   23 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 23 (restodef)


State 173

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' . MAP '\'' LIST '#' '\'' '*' variable variable ')' ')'

    MAP  shift, and go to state 180


State 174

   42 invertir: COERCE '(' REVERSE '(' COERCE . variable '\'' LIST ')' ')' '\'' variable

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 181


State 175

   21 definicion: LET '(' '(' variable restodef ')' ')' $@2 . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 182
    sentencia      go to state 6
    variable       go to state 7


State 176

   31 restoif: '(' PROGN . instrucciones ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 183
    sentencia      go to state 6
    variable       go to state 7


State 177

   15 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 15 (deffuncion)


State 178

   34 bucle: DOTIMES '(' variable '(' LENGTH variable ')' ')' . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 184
    sentencia      go to state 6
    variable       go to state 7


State 179

   33 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable . ')' instrucciones

    ')'  shift, and go to state 185


State 180

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP . '\'' LIST '#' '\'' '*' variable variable ')' ')'

    '\''  shift, and go to state 186


State 181

   42 invertir: COERCE '(' REVERSE '(' COERCE variable . '\'' LIST ')' ')' '\'' variable

    '\''  shift, and go to state 187


State 182

   21 definicion: LET '(' '(' variable restodef ')' ')' $@2 instrucciones .

    $default  reduce using rule 21 (definicion)


State 183

   31 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 188


State 184

   34 bucle: DOTIMES '(' variable '(' LENGTH variable ')' ')' instrucciones .

    $default  reduce using rule 34 (bucle)


State 185

   33 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable ')' . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 189
    sentencia      go to state 6
    variable       go to state 7


State 186

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' . LIST '#' '\'' '*' variable variable ')' ')'

    LIST  shift, and go to state 190


State 187

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' . LIST ')' ')' '\'' variable

    LIST  shift, and go to state 191


State 188

   31 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 192


State 189

   33 bucle: DOTIMES '(' variable '(' LENGTH variable ')' variable ')' instrucciones .

    $default  reduce using rule 33 (bucle)


State 190

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST . '#' '\'' '*' variable variable ')' ')'

    '#'  shift, and go to state 193


State 191

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST . ')' ')' '\'' variable

    ')'  shift, and go to state 194


State 192

   31 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 31 (restoif)


State 193

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' . '\'' '*' variable variable ')' ')'

    '\''  shift, and go to state 195


State 194

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST ')' . ')' '\'' variable

    ')'  shift, and go to state 196


State 195

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' . '*' variable variable ')' ')'

    '*'  shift, and go to state 197


State 196

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST ')' ')' . '\'' variable

    '\''  shift, and go to state 198


State 197

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' . variable variable ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 199


State 198

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST ')' ')' '\'' . variable

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 200


State 199

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable . variable ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 201


State 200

   42 invertir: COERCE '(' REVERSE '(' COERCE variable '\'' LIST ')' ')' '\'' variable .

    $default  reduce using rule 42 (invertir)


State 201

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable . ')' ')'

    ')'  shift, and go to state 202


State 202

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' . ')'

    ')'  shift, and go to state 203


State 203

   28 asignacion: SETQ variable '(' REDUCE '#' '\'' '+' '(' MAP '\'' LIST '#' '\'' '*' variable variable ')' ')' .

    $default  reduce using rule 28 (asignacion)
