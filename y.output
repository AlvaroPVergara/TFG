Terminals unused in grammar

    INTEGER
    AREF
    FROM
    DOTIMES
    LENGTH
    INCF
    REDUCE


State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | expresion
    7          | '(' condicion
    8          | '(' bucle ')'
    9          | '(' llamada ')'
   10          | '(' deffuncion
   11          | PRINT STRING
   12          | RETURN sentencia

   13 deffuncion: DEFUN IDENTIF '(' argumentosfun ')' instrucciones ')'

   14 argumentosfun: %empty
   15              | variable argumentosfun

   16 definicion: DEFVAR variable restodef

   17 restodef: expresion
   18         | '(' MAKE '-' ARRAY expresion ')'

   19 asignacion: SETQ variable sentencia
   20           | SETF variable sentencia
   21           | LET '(' '(' variable expresion ')' ')' instrucciones

   22 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' restoif

   23 restoif: ')'
   24        | '(' PROGN instrucciones ')' ')'

   25 bucle: LOOP WHILE '(' expresion ')' DO instrucciones

   26 llamada: IDENTIF '(' instrucciones ')'

   27 expresion: operando
   28          | '+' expresion expresion
   29          | '-' expresion expresion
   30          | '*' expresion expresion
   31          | '/' expresion expresion
   32          | AND expresion expresion
   33          | OR expresion expresion
   34          | '=' expresion expresion
   35          | '<' expresion expresion
   36          | '>' expresion expresion
   37          | LEQ expresion expresion
   38          | GEQ expresion expresion
   39          | NEQ expresion expresion

   40 operando: NUMBER
   41         | variable
   42         | '(' expresion ')'

   43 variable: IDENTIF
   44         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 7 8 9 10 13 18 21 22 24 25 26 42
    ')' (41) 4 5 8 9 13 18 21 22 23 24 25 26 42
    '*' (42) 30 44
    '+' (43) 28
    '-' (45) 18 29
    '/' (47) 31
    '<' (60) 35
    '=' (61) 34
    '>' (62) 36
    error (256)
    NUMBER (258) 40
    IDENTIF (259) 13 26 43 44
    INTEGER (260)
    STRING (261) 11
    DEFVAR (262) 16
    SETQ (263) 19
    SETF (264) 20
    AREF (265)
    MAKE (266) 18
    ARRAY (267) 18
    LET (268) 21
    WHILE (269) 25
    LOOP (270) 25
    IF (271) 22
    PROGN (272) 22 24
    DO (273) 25
    PRINT (274) 11
    DEFUN (275) 13
    RETURN (276) 12
    FROM (277)
    AND (278) 32
    OR (279) 33
    LEQ (280) 37
    GEQ (281) 38
    NEQ (282) 39
    DOTIMES (283)
    LENGTH (284)
    INCF (285)
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 13 21 22 24 25 26
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3 12 19 20
    deffuncion (45)
        on left: 13
        on right: 10
    argumentosfun (46)
        on left: 14 15
        on right: 13 15
    definicion (47)
        on left: 16
        on right: 4
    restodef (48)
        on left: 17 18
        on right: 16
    asignacion (49)
        on left: 19 20 21
        on right: 5
    condicion (50)
        on left: 22
        on right: 7
    restoif (51)
        on left: 23 24
        on right: 22
    bucle (52)
        on left: 25
        on right: 8
    llamada (53)
        on left: 26
        on right: 9
    expresion (54)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 6 17 18 21 22 25 28 29 30 31 32 33 34 35 36 37 38 39 42
    operando (55)
        on left: 40 41 42
        on right: 27
    variable (56)
        on left: 43 44
        on right: 15 16 19 20 21 41


State 0

    0 $accept: . axioma $end

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 18
    instrucciones  go to state 19
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 1

   40 operando: NUMBER .

    $default  reduce using rule 40 (operando)


State 2

   43 variable: IDENTIF .

    $default  reduce using rule 43 (variable)


State 3

   11 sentencia: PRINT . STRING

    STRING  shift, and go to state 24


State 4

   12 sentencia: RETURN . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 25
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 5

   32 expresion: AND . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 27
    operando   go to state 22
    variable   go to state 23


State 6

   33 expresion: OR . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 28
    operando   go to state 22
    variable   go to state 23


State 7

   37 expresion: LEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 29
    operando   go to state 22
    variable   go to state 23


State 8

   38 expresion: GEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 30
    operando   go to state 22
    variable   go to state 23


State 9

   39 expresion: NEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 31
    operando   go to state 22
    variable   go to state 23


State 10

   28 expresion: '+' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 32
    operando   go to state 22
    variable   go to state 23


State 11

   29 expresion: '-' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 33
    operando   go to state 22
    variable   go to state 23


State 12

   30 expresion: '*' . expresion expresion
   44 variable: '*' . IDENTIF '*'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 34
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 35
    operando   go to state 22
    variable   go to state 23


State 13

   31 expresion: '/' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 36
    operando   go to state 22
    variable   go to state 23


State 14

   34 expresion: '=' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 37
    operando   go to state 22
    variable   go to state 23


State 15

   35 expresion: '<' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 38
    operando   go to state 22
    variable   go to state 23


State 16

   36 expresion: '>' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 39
    operando   go to state 22
    variable   go to state 23


State 17

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    7          | '(' . condicion
    8          | '(' . bucle ')'
    9          | '(' . llamada ')'
   10          | '(' . deffuncion
   42 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 40
    DEFVAR   shift, and go to state 41
    SETQ     shift, and go to state 42
    SETF     shift, and go to state 43
    LET      shift, and go to state 44
    LOOP     shift, and go to state 45
    IF       shift, and go to state 46
    DEFUN    shift, and go to state 47
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    deffuncion  go to state 48
    definicion  go to state 49
    asignacion  go to state 50
    condicion   go to state 51
    bucle       go to state 52
    llamada     go to state 53
    expresion   go to state 54
    operando    go to state 22
    variable    go to state 23


State 18

    0 $accept: axioma . $end

    $end  shift, and go to state 55


State 19

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 20

    3 instrucciones: sentencia . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 56
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 21

    6 sentencia: expresion .

    $default  reduce using rule 6 (sentencia)


State 22

   27 expresion: operando .

    $default  reduce using rule 27 (expresion)


State 23

   41 operando: variable .

    $default  reduce using rule 41 (operando)


State 24

   11 sentencia: PRINT STRING .

    $default  reduce using rule 11 (sentencia)


State 25

   12 sentencia: RETURN sentencia .

    $default  reduce using rule 12 (sentencia)


State 26

   42 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 54
    operando   go to state 22
    variable   go to state 23


State 27

   32 expresion: AND expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 57
    operando   go to state 22
    variable   go to state 23


State 28

   33 expresion: OR expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 58
    operando   go to state 22
    variable   go to state 23


State 29

   37 expresion: LEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 59
    operando   go to state 22
    variable   go to state 23


State 30

   38 expresion: GEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 60
    operando   go to state 22
    variable   go to state 23


State 31

   39 expresion: NEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 61
    operando   go to state 22
    variable   go to state 23


State 32

   28 expresion: '+' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 62
    operando   go to state 22
    variable   go to state 23


State 33

   29 expresion: '-' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 63
    operando   go to state 22
    variable   go to state 23


State 34

   43 variable: IDENTIF .
   44         | '*' IDENTIF . '*'

    '*'  shift, and go to state 64

    '*'       [reduce using rule 43 (variable)]
    $default  reduce using rule 43 (variable)


State 35

   30 expresion: '*' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 65
    operando   go to state 22
    variable   go to state 23


State 36

   31 expresion: '/' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 66
    operando   go to state 22
    variable   go to state 23


State 37

   34 expresion: '=' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 67
    operando   go to state 22
    variable   go to state 23


State 38

   35 expresion: '<' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 68
    operando   go to state 22
    variable   go to state 23


State 39

   36 expresion: '>' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 69
    operando   go to state 22
    variable   go to state 23


State 40

   26 llamada: IDENTIF . '(' instrucciones ')'
   43 variable: IDENTIF .

    '('  shift, and go to state 70

    $default  reduce using rule 43 (variable)


State 41

   16 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 72


State 42

   19 asignacion: SETQ . variable sentencia

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 73


State 43

   20 asignacion: SETF . variable sentencia

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 74


State 44

   21 asignacion: LET . '(' '(' variable expresion ')' ')' instrucciones

    '('  shift, and go to state 75


State 45

   25 bucle: LOOP . WHILE '(' expresion ')' DO instrucciones

    WHILE  shift, and go to state 76


State 46

   22 condicion: IF . '(' expresion ')' '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 77


State 47

   13 deffuncion: DEFUN . IDENTIF '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 78


State 48

   10 sentencia: '(' deffuncion .

    $default  reduce using rule 10 (sentencia)


State 49

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 79


State 50

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 80


State 51

    7 sentencia: '(' condicion .

    $default  reduce using rule 7 (sentencia)


State 52

    8 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 81


State 53

    9 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 82


State 54

   42 operando: '(' expresion . ')'

    ')'  shift, and go to state 83


State 55

    0 $accept: axioma $end .

    $default  accept


State 56

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 57

   32 expresion: AND expresion expresion .

    $default  reduce using rule 32 (expresion)


State 58

   33 expresion: OR expresion expresion .

    $default  reduce using rule 33 (expresion)


State 59

   37 expresion: LEQ expresion expresion .

    $default  reduce using rule 37 (expresion)


State 60

   38 expresion: GEQ expresion expresion .

    $default  reduce using rule 38 (expresion)


State 61

   39 expresion: NEQ expresion expresion .

    $default  reduce using rule 39 (expresion)


State 62

   28 expresion: '+' expresion expresion .

    $default  reduce using rule 28 (expresion)


State 63

   29 expresion: '-' expresion expresion .

    $default  reduce using rule 29 (expresion)


State 64

   44 variable: '*' IDENTIF '*' .

    $default  reduce using rule 44 (variable)


State 65

   30 expresion: '*' expresion expresion .

    $default  reduce using rule 30 (expresion)


State 66

   31 expresion: '/' expresion expresion .

    $default  reduce using rule 31 (expresion)


State 67

   34 expresion: '=' expresion expresion .

    $default  reduce using rule 34 (expresion)


State 68

   35 expresion: '<' expresion expresion .

    $default  reduce using rule 35 (expresion)


State 69

   36 expresion: '>' expresion expresion .

    $default  reduce using rule 36 (expresion)


State 70

   26 llamada: IDENTIF '(' . instrucciones ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 84
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 71

   44 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 85


State 72

   16 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 86

    restodef   go to state 87
    expresion  go to state 88
    operando   go to state 22
    variable   go to state 23


State 73

   19 asignacion: SETQ variable . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 89
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 74

   20 asignacion: SETF variable . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 90
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 75

   21 asignacion: LET '(' . '(' variable expresion ')' ')' instrucciones

    '('  shift, and go to state 91


State 76

   25 bucle: LOOP WHILE . '(' expresion ')' DO instrucciones

    '('  shift, and go to state 92


State 77

   22 condicion: IF '(' . expresion ')' '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 93
    operando   go to state 22
    variable   go to state 23


State 78

   13 deffuncion: DEFUN IDENTIF . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 94


State 79

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 80

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 81

    8 sentencia: '(' bucle ')' .

    $default  reduce using rule 8 (sentencia)


State 82

    9 sentencia: '(' llamada ')' .

    $default  reduce using rule 9 (sentencia)


State 83

   42 operando: '(' expresion ')' .

    $default  reduce using rule 42 (operando)


State 84

   26 llamada: IDENTIF '(' instrucciones . ')'

    ')'  shift, and go to state 95


State 85

   44 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 64


State 86

   18 restodef: '(' . MAKE '-' ARRAY expresion ')'
   42 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    MAKE     shift, and go to state 96
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 54
    operando   go to state 22
    variable   go to state 23


State 87

   16 definicion: DEFVAR variable restodef .

    $default  reduce using rule 16 (definicion)


State 88

   17 restodef: expresion .

    $default  reduce using rule 17 (restodef)


State 89

   19 asignacion: SETQ variable sentencia .

    $default  reduce using rule 19 (asignacion)


State 90

   20 asignacion: SETF variable sentencia .

    $default  reduce using rule 20 (asignacion)


State 91

   21 asignacion: LET '(' '(' . variable expresion ')' ')' instrucciones

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 97


State 92

   25 bucle: LOOP WHILE '(' . expresion ')' DO instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 98
    operando   go to state 22
    variable   go to state 23


State 93

   22 condicion: IF '(' expresion . ')' '(' PROGN instrucciones ')' restoif

    ')'  shift, and go to state 99


State 94

   13 deffuncion: DEFUN IDENTIF '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 100
    variable       go to state 101


State 95

   26 llamada: IDENTIF '(' instrucciones ')' .

    $default  reduce using rule 26 (llamada)


State 96

   18 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 102


State 97

   21 asignacion: LET '(' '(' variable . expresion ')' ')' instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 103
    operando   go to state 22
    variable   go to state 23


State 98

   25 bucle: LOOP WHILE '(' expresion . ')' DO instrucciones

    ')'  shift, and go to state 104


State 99

   22 condicion: IF '(' expresion ')' . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 105


State 100

   13 deffuncion: DEFUN IDENTIF '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 106


State 101

   15 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 107
    variable       go to state 101


State 102

   18 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 108


State 103

   21 asignacion: LET '(' '(' variable expresion . ')' ')' instrucciones

    ')'  shift, and go to state 109


State 104

   25 bucle: LOOP WHILE '(' expresion ')' . DO instrucciones

    DO  shift, and go to state 110


State 105

   22 condicion: IF '(' expresion ')' '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 111


State 106

   13 deffuncion: DEFUN IDENTIF '(' argumentosfun ')' . instrucciones ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 112
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 107

   15 argumentosfun: variable argumentosfun .

    $default  reduce using rule 15 (argumentosfun)


State 108

   18 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 113
    operando   go to state 22
    variable   go to state 23


State 109

   21 asignacion: LET '(' '(' variable expresion ')' . ')' instrucciones

    ')'  shift, and go to state 114


State 110

   25 bucle: LOOP WHILE '(' expresion ')' DO . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 115
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 111

   22 condicion: IF '(' expresion ')' '(' PROGN . instrucciones ')' restoif

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 116
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 112

   13 deffuncion: DEFUN IDENTIF '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 117


State 113

   18 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 118


State 114

   21 asignacion: LET '(' '(' variable expresion ')' ')' . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 119
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 115

   25 bucle: LOOP WHILE '(' expresion ')' DO instrucciones .

    $default  reduce using rule 25 (bucle)


State 116

   22 condicion: IF '(' expresion ')' '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 120


State 117

   13 deffuncion: DEFUN IDENTIF '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 13 (deffuncion)


State 118

   18 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 18 (restodef)


State 119

   21 asignacion: LET '(' '(' variable expresion ')' ')' instrucciones .

    $default  reduce using rule 21 (asignacion)


State 120

   22 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 121
    ')'  shift, and go to state 122

    restoif  go to state 123


State 121

   24 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 124


State 122

   23 restoif: ')' .

    $default  reduce using rule 23 (restoif)


State 123

   22 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 22 (condicion)


State 124

   24 restoif: '(' PROGN . instrucciones ')' ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 125
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 125

   24 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 126


State 126

   24 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 127


State 127

   24 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 24 (restoif)
