Terminals unused in grammar

    INTEGER
    DOTIMES
    LENGTH
    INCF
    REDUCE


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | '(' condicion
    7          | '(' bucle ')'
    8          | '(' llamada ')'
    9          | '(' deffuncion
   10          | '(' print ')'
   11          | '(' returnfrom ')'
   12          | variable

   13 $@1: %empty

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   15 argumentosfun: %empty
   16              | variable argumentosfun

   17 returnfrom: RETURN '-' FROM IDENTIF expresion

   18 definicion: DEFVAR variable restodef
   19           | LET '(' '(' variable restodef ')' ')' instrucciones

   20 restodef: expresion
   21         | '(' MAKE '-' ARRAY expresion ')'

   22 asignacion: SETQ variable expresion
   23           | SETQ variable '(' condicion
   24           | SETF '(' AREF variable expresion ')' expresion

   25 condicion: IF expresion '(' PROGN instrucciones ')' restoif

   26 restoif: ')'
   27        | '(' PROGN instrucciones ')' ')'

   28 bucle: LOOP WHILE expresion DO instrucciones

   29 llamada: IDENTIF argumentos

   30 argumentos: %empty
   31           | expresion argumentos

   32 print: PRINT restoprint

   33 restoprint: STRING
   34           | expresion

   35 expresion: operando
   36          | '(' '+' expresion expresion ')'
   37          | '(' '-' expresion expresion ')'
   38          | '(' '*' expresion expresion ')'
   39          | '(' '/' expresion expresion ')'
   40          | '(' AND expresion expresion ')'
   41          | '(' OR expresion expresion ')'
   42          | '(' '=' expresion expresion ')'
   43          | '(' '<' expresion expresion ')'
   44          | '(' '>' expresion expresion ')'
   45          | '(' LEQ expresion expresion ')'
   46          | '(' GEQ expresion expresion ')'
   47          | '(' NEQ expresion expresion ')'

   48 operando: NUMBER
   49         | variable

   50 variable: IDENTIF
   51         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 6 7 8 9 10 11 14 19 21 23 24 25 27 36 37 38 39 40 41 42 43 44 45 46 47
    ')' (41) 4 5 7 8 10 11 14 19 21 24 25 26 27 36 37 38 39 40 41 42 43 44 45 46 47
    '*' (42) 38 51
    '+' (43) 36
    '-' (45) 17 21 37
    '/' (47) 39
    '<' (60) 43
    '=' (61) 42
    '>' (62) 44
    error (256)
    NUMBER (258) 48
    IDENTIF (259) 14 17 29 50 51
    INTEGER (260)
    STRING (261) 33
    DEFVAR (262) 18
    SETQ (263) 22 23
    SETF (264) 24
    AREF (265) 24
    MAKE (266) 21
    ARRAY (267) 21
    LET (268) 19
    WHILE (269) 28
    LOOP (270) 28
    IF (271) 25
    PROGN (272) 25 27
    DO (273) 28
    PRINT (274) 32
    DEFUN (275) 14
    RETURN (276) 17
    FROM (277) 17
    AND (278) 40
    OR (279) 41
    LEQ (280) 45
    GEQ (281) 46
    NEQ (282) 47
    DOTIMES (283)
    LENGTH (284)
    INCF (285)
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 14 19 25 27 28
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3
    deffuncion (45)
        on left: 14
        on right: 9
    $@1 (46)
        on left: 13
        on right: 14
    argumentosfun (47)
        on left: 15 16
        on right: 14 16
    returnfrom (48)
        on left: 17
        on right: 11
    definicion (49)
        on left: 18 19
        on right: 4
    restodef (50)
        on left: 20 21
        on right: 18 19
    asignacion (51)
        on left: 22 23 24
        on right: 5
    condicion (52)
        on left: 25
        on right: 6 23
    restoif (53)
        on left: 26 27
        on right: 25
    bucle (54)
        on left: 28
        on right: 7
    llamada (55)
        on left: 29
        on right: 8
    argumentos (56)
        on left: 30 31
        on right: 29 31
    print (57)
        on left: 32
        on right: 10
    restoprint (58)
        on left: 33 34
        on right: 32
    expresion (59)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 17 20 21 22 24 25 28 31 34 36 37 38 39 40 41 42 43 44 45 46 47
    operando (60)
        on left: 48 49
        on right: 35
    variable (61)
        on left: 50 51
        on right: 12 16 18 19 22 23 24 49


State 0

    0 $accept: . axioma $end

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 4
    instrucciones  go to state 5
    sentencia      go to state 6
    variable       go to state 7


State 1

   50 variable: IDENTIF .

    $default  reduce using rule 50 (variable)


State 2

   51 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 8


State 3

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    6          | '(' . condicion
    7          | '(' . bucle ')'
    8          | '(' . llamada ')'
    9          | '(' . deffuncion
   10          | '(' . print ')'
   11          | '(' . returnfrom ')'

    IDENTIF  shift, and go to state 9
    DEFVAR   shift, and go to state 10
    SETQ     shift, and go to state 11
    SETF     shift, and go to state 12
    LET      shift, and go to state 13
    LOOP     shift, and go to state 14
    IF       shift, and go to state 15
    PRINT    shift, and go to state 16
    DEFUN    shift, and go to state 17
    RETURN   shift, and go to state 18

    deffuncion  go to state 19
    returnfrom  go to state 20
    definicion  go to state 21
    asignacion  go to state 22
    condicion   go to state 23
    bucle       go to state 24
    llamada     go to state 25
    print       go to state 26


State 4

    0 $accept: axioma . $end

    $end  shift, and go to state 27


State 5

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 6

    3 instrucciones: sentencia . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 28
    sentencia      go to state 6
    variable       go to state 7


State 7

   12 sentencia: variable .

    $default  reduce using rule 12 (sentencia)


State 8

   51 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 29


State 9

   29 llamada: IDENTIF . argumentos

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    $default  reduce using rule 30 (argumentos)

    argumentos  go to state 32
    expresion   go to state 33
    operando    go to state 34
    variable    go to state 35


State 10

   18 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 36


State 11

   22 asignacion: SETQ . variable expresion
   23           | SETQ . variable '(' condicion

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 37


State 12

   24 asignacion: SETF . '(' AREF variable expresion ')' expresion

    '('  shift, and go to state 38


State 13

   19 definicion: LET . '(' '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 39


State 14

   28 bucle: LOOP . WHILE expresion DO instrucciones

    WHILE  shift, and go to state 40


State 15

   25 condicion: IF . expresion '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 41
    operando   go to state 34
    variable   go to state 35


State 16

   32 print: PRINT . restoprint

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    STRING   shift, and go to state 42
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    restoprint  go to state 43
    expresion   go to state 44
    operando    go to state 34
    variable    go to state 35


State 17

   14 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 45


State 18

   17 returnfrom: RETURN . '-' FROM IDENTIF expresion

    '-'  shift, and go to state 46


State 19

    9 sentencia: '(' deffuncion .

    $default  reduce using rule 9 (sentencia)


State 20

   11 sentencia: '(' returnfrom . ')'

    ')'  shift, and go to state 47


State 21

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 48


State 22

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 49


State 23

    6 sentencia: '(' condicion .

    $default  reduce using rule 6 (sentencia)


State 24

    7 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 50


State 25

    8 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 51


State 26

   10 sentencia: '(' print . ')'

    ')'  shift, and go to state 52


State 27

    0 $accept: axioma $end .

    $default  accept


State 28

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 29

   51 variable: '*' IDENTIF '*' .

    $default  reduce using rule 51 (variable)


State 30

   48 operando: NUMBER .

    $default  reduce using rule 48 (operando)


State 31

   36 expresion: '(' . '+' expresion expresion ')'
   37          | '(' . '-' expresion expresion ')'
   38          | '(' . '*' expresion expresion ')'
   39          | '(' . '/' expresion expresion ')'
   40          | '(' . AND expresion expresion ')'
   41          | '(' . OR expresion expresion ')'
   42          | '(' . '=' expresion expresion ')'
   43          | '(' . '<' expresion expresion ')'
   44          | '(' . '>' expresion expresion ')'
   45          | '(' . LEQ expresion expresion ')'
   46          | '(' . GEQ expresion expresion ')'
   47          | '(' . NEQ expresion expresion ')'

    AND  shift, and go to state 53
    OR   shift, and go to state 54
    LEQ  shift, and go to state 55
    GEQ  shift, and go to state 56
    NEQ  shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    '='  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64


State 32

   29 llamada: IDENTIF argumentos .

    $default  reduce using rule 29 (llamada)


State 33

   31 argumentos: expresion . argumentos

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    $default  reduce using rule 30 (argumentos)

    argumentos  go to state 65
    expresion   go to state 33
    operando    go to state 34
    variable    go to state 35


State 34

   35 expresion: operando .

    $default  reduce using rule 35 (expresion)


State 35

   49 operando: variable .

    $default  reduce using rule 49 (operando)


State 36

   18 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 66

    restodef   go to state 67
    expresion  go to state 68
    operando   go to state 34
    variable   go to state 35


State 37

   22 asignacion: SETQ variable . expresion
   23           | SETQ variable . '(' condicion

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 69

    expresion  go to state 70
    operando   go to state 34
    variable   go to state 35


State 38

   24 asignacion: SETF '(' . AREF variable expresion ')' expresion

    AREF  shift, and go to state 71


State 39

   19 definicion: LET '(' . '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 72


State 40

   28 bucle: LOOP WHILE . expresion DO instrucciones

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 73
    operando   go to state 34
    variable   go to state 35


State 41

   25 condicion: IF expresion . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 74


State 42

   33 restoprint: STRING .

    $default  reduce using rule 33 (restoprint)


State 43

   32 print: PRINT restoprint .

    $default  reduce using rule 32 (print)


State 44

   34 restoprint: expresion .

    $default  reduce using rule 34 (restoprint)


State 45

   14 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 75


State 46

   17 returnfrom: RETURN '-' . FROM IDENTIF expresion

    FROM  shift, and go to state 76


State 47

   11 sentencia: '(' returnfrom ')' .

    $default  reduce using rule 11 (sentencia)


State 48

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 49

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 50

    7 sentencia: '(' bucle ')' .

    $default  reduce using rule 7 (sentencia)


State 51

    8 sentencia: '(' llamada ')' .

    $default  reduce using rule 8 (sentencia)


State 52

   10 sentencia: '(' print ')' .

    $default  reduce using rule 10 (sentencia)


State 53

   40 expresion: '(' AND . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 77
    operando   go to state 34
    variable   go to state 35


State 54

   41 expresion: '(' OR . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 78
    operando   go to state 34
    variable   go to state 35


State 55

   45 expresion: '(' LEQ . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 79
    operando   go to state 34
    variable   go to state 35


State 56

   46 expresion: '(' GEQ . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 80
    operando   go to state 34
    variable   go to state 35


State 57

   47 expresion: '(' NEQ . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 81
    operando   go to state 34
    variable   go to state 35


State 58

   36 expresion: '(' '+' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 82
    operando   go to state 34
    variable   go to state 35


State 59

   37 expresion: '(' '-' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 83
    operando   go to state 34
    variable   go to state 35


State 60

   38 expresion: '(' '*' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 84
    operando   go to state 34
    variable   go to state 35


State 61

   39 expresion: '(' '/' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 85
    operando   go to state 34
    variable   go to state 35


State 62

   42 expresion: '(' '=' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 86
    operando   go to state 34
    variable   go to state 35


State 63

   43 expresion: '(' '<' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 87
    operando   go to state 34
    variable   go to state 35


State 64

   44 expresion: '(' '>' . expresion expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 88
    operando   go to state 34
    variable   go to state 35


State 65

   31 argumentos: expresion argumentos .

    $default  reduce using rule 31 (argumentos)


State 66

   21 restodef: '(' . MAKE '-' ARRAY expresion ')'
   36 expresion: '(' . '+' expresion expresion ')'
   37          | '(' . '-' expresion expresion ')'
   38          | '(' . '*' expresion expresion ')'
   39          | '(' . '/' expresion expresion ')'
   40          | '(' . AND expresion expresion ')'
   41          | '(' . OR expresion expresion ')'
   42          | '(' . '=' expresion expresion ')'
   43          | '(' . '<' expresion expresion ')'
   44          | '(' . '>' expresion expresion ')'
   45          | '(' . LEQ expresion expresion ')'
   46          | '(' . GEQ expresion expresion ')'
   47          | '(' . NEQ expresion expresion ')'

    MAKE  shift, and go to state 89
    AND   shift, and go to state 53
    OR    shift, and go to state 54
    LEQ   shift, and go to state 55
    GEQ   shift, and go to state 56
    NEQ   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '='   shift, and go to state 62
    '<'   shift, and go to state 63
    '>'   shift, and go to state 64


State 67

   18 definicion: DEFVAR variable restodef .

    $default  reduce using rule 18 (definicion)


State 68

   20 restodef: expresion .

    $default  reduce using rule 20 (restodef)


State 69

   23 asignacion: SETQ variable '(' . condicion
   36 expresion: '(' . '+' expresion expresion ')'
   37          | '(' . '-' expresion expresion ')'
   38          | '(' . '*' expresion expresion ')'
   39          | '(' . '/' expresion expresion ')'
   40          | '(' . AND expresion expresion ')'
   41          | '(' . OR expresion expresion ')'
   42          | '(' . '=' expresion expresion ')'
   43          | '(' . '<' expresion expresion ')'
   44          | '(' . '>' expresion expresion ')'
   45          | '(' . LEQ expresion expresion ')'
   46          | '(' . GEQ expresion expresion ')'
   47          | '(' . NEQ expresion expresion ')'

    IF   shift, and go to state 15
    AND  shift, and go to state 53
    OR   shift, and go to state 54
    LEQ  shift, and go to state 55
    GEQ  shift, and go to state 56
    NEQ  shift, and go to state 57
    '+'  shift, and go to state 58
    '-'  shift, and go to state 59
    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    '='  shift, and go to state 62
    '<'  shift, and go to state 63
    '>'  shift, and go to state 64

    condicion  go to state 90


State 70

   22 asignacion: SETQ variable expresion .

    $default  reduce using rule 22 (asignacion)


State 71

   24 asignacion: SETF '(' AREF . variable expresion ')' expresion

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 91


State 72

   19 definicion: LET '(' '(' . variable restodef ')' ')' instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    variable  go to state 92


State 73

   28 bucle: LOOP WHILE expresion . DO instrucciones

    DO  shift, and go to state 93


State 74

   25 condicion: IF expresion '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 94


State 75

   14 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 95


State 76

   17 returnfrom: RETURN '-' FROM . IDENTIF expresion

    IDENTIF  shift, and go to state 96


State 77

   40 expresion: '(' AND expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 97
    operando   go to state 34
    variable   go to state 35


State 78

   41 expresion: '(' OR expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 98
    operando   go to state 34
    variable   go to state 35


State 79

   45 expresion: '(' LEQ expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 99
    operando   go to state 34
    variable   go to state 35


State 80

   46 expresion: '(' GEQ expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 100
    operando   go to state 34
    variable   go to state 35


State 81

   47 expresion: '(' NEQ expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 101
    operando   go to state 34
    variable   go to state 35


State 82

   36 expresion: '(' '+' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 102
    operando   go to state 34
    variable   go to state 35


State 83

   37 expresion: '(' '-' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 103
    operando   go to state 34
    variable   go to state 35


State 84

   38 expresion: '(' '*' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 104
    operando   go to state 34
    variable   go to state 35


State 85

   39 expresion: '(' '/' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 105
    operando   go to state 34
    variable   go to state 35


State 86

   42 expresion: '(' '=' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 106
    operando   go to state 34
    variable   go to state 35


State 87

   43 expresion: '(' '<' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 107
    operando   go to state 34
    variable   go to state 35


State 88

   44 expresion: '(' '>' expresion . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 108
    operando   go to state 34
    variable   go to state 35


State 89

   21 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 109


State 90

   23 asignacion: SETQ variable '(' condicion .

    $default  reduce using rule 23 (asignacion)


State 91

   24 asignacion: SETF '(' AREF variable . expresion ')' expresion

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 110
    operando   go to state 34
    variable   go to state 35


State 92

   19 definicion: LET '(' '(' variable . restodef ')' ')' instrucciones

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 66

    restodef   go to state 111
    expresion  go to state 68
    operando   go to state 34
    variable   go to state 35


State 93

   28 bucle: LOOP WHILE expresion DO . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 112
    sentencia      go to state 6
    variable       go to state 7


State 94

   25 condicion: IF expresion '(' PROGN . instrucciones ')' restoif

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 113
    sentencia      go to state 6
    variable       go to state 7


State 95

   14 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 15 (argumentosfun)

    argumentosfun  go to state 114
    variable       go to state 115


State 96

   17 returnfrom: RETURN '-' FROM IDENTIF . expresion

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 116
    operando   go to state 34
    variable   go to state 35


State 97

   40 expresion: '(' AND expresion expresion . ')'

    ')'  shift, and go to state 117


State 98

   41 expresion: '(' OR expresion expresion . ')'

    ')'  shift, and go to state 118


State 99

   45 expresion: '(' LEQ expresion expresion . ')'

    ')'  shift, and go to state 119


State 100

   46 expresion: '(' GEQ expresion expresion . ')'

    ')'  shift, and go to state 120


State 101

   47 expresion: '(' NEQ expresion expresion . ')'

    ')'  shift, and go to state 121


State 102

   36 expresion: '(' '+' expresion expresion . ')'

    ')'  shift, and go to state 122


State 103

   37 expresion: '(' '-' expresion expresion . ')'

    ')'  shift, and go to state 123


State 104

   38 expresion: '(' '*' expresion expresion . ')'

    ')'  shift, and go to state 124


State 105

   39 expresion: '(' '/' expresion expresion . ')'

    ')'  shift, and go to state 125


State 106

   42 expresion: '(' '=' expresion expresion . ')'

    ')'  shift, and go to state 126


State 107

   43 expresion: '(' '<' expresion expresion . ')'

    ')'  shift, and go to state 127


State 108

   44 expresion: '(' '>' expresion expresion . ')'

    ')'  shift, and go to state 128


State 109

   21 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 129


State 110

   24 asignacion: SETF '(' AREF variable expresion . ')' expresion

    ')'  shift, and go to state 130


State 111

   19 definicion: LET '(' '(' variable restodef . ')' ')' instrucciones

    ')'  shift, and go to state 131


State 112

   28 bucle: LOOP WHILE expresion DO instrucciones .

    $default  reduce using rule 28 (bucle)


State 113

   25 condicion: IF expresion '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 132


State 114

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 133


State 115

   16 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2

    $default  reduce using rule 15 (argumentosfun)

    argumentosfun  go to state 134
    variable       go to state 115


State 116

   17 returnfrom: RETURN '-' FROM IDENTIF expresion .

    $default  reduce using rule 17 (returnfrom)


State 117

   40 expresion: '(' AND expresion expresion ')' .

    $default  reduce using rule 40 (expresion)


State 118

   41 expresion: '(' OR expresion expresion ')' .

    $default  reduce using rule 41 (expresion)


State 119

   45 expresion: '(' LEQ expresion expresion ')' .

    $default  reduce using rule 45 (expresion)


State 120

   46 expresion: '(' GEQ expresion expresion ')' .

    $default  reduce using rule 46 (expresion)


State 121

   47 expresion: '(' NEQ expresion expresion ')' .

    $default  reduce using rule 47 (expresion)


State 122

   36 expresion: '(' '+' expresion expresion ')' .

    $default  reduce using rule 36 (expresion)


State 123

   37 expresion: '(' '-' expresion expresion ')' .

    $default  reduce using rule 37 (expresion)


State 124

   38 expresion: '(' '*' expresion expresion ')' .

    $default  reduce using rule 38 (expresion)


State 125

   39 expresion: '(' '/' expresion expresion ')' .

    $default  reduce using rule 39 (expresion)


State 126

   42 expresion: '(' '=' expresion expresion ')' .

    $default  reduce using rule 42 (expresion)


State 127

   43 expresion: '(' '<' expresion expresion ')' .

    $default  reduce using rule 43 (expresion)


State 128

   44 expresion: '(' '>' expresion expresion ')' .

    $default  reduce using rule 44 (expresion)


State 129

   21 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 135
    operando   go to state 34
    variable   go to state 35


State 130

   24 asignacion: SETF '(' AREF variable expresion ')' . expresion

    NUMBER   shift, and go to state 30
    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 31

    expresion  go to state 136
    operando   go to state 34
    variable   go to state 35


State 131

   19 definicion: LET '(' '(' variable restodef ')' . ')' instrucciones

    ')'  shift, and go to state 137


State 132

   25 condicion: IF expresion '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 138
    ')'  shift, and go to state 139

    restoif  go to state 140


State 133

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 141
    sentencia      go to state 6
    variable       go to state 7


State 134

   16 argumentosfun: variable argumentosfun .

    $default  reduce using rule 16 (argumentosfun)


State 135

   21 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 142


State 136

   24 asignacion: SETF '(' AREF variable expresion ')' expresion .

    $default  reduce using rule 24 (asignacion)


State 137

   19 definicion: LET '(' '(' variable restodef ')' ')' . instrucciones

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 143
    sentencia      go to state 6
    variable       go to state 7


State 138

   27 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 144


State 139

   26 restoif: ')' .

    $default  reduce using rule 26 (restoif)


State 140

   25 condicion: IF expresion '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 25 (condicion)


State 141

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 145


State 142

   21 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 21 (restodef)


State 143

   19 definicion: LET '(' '(' variable restodef ')' ')' instrucciones .

    $default  reduce using rule 19 (definicion)


State 144

   27 restoif: '(' PROGN . instrucciones ')' ')'

    IDENTIF  shift, and go to state 1
    '*'      shift, and go to state 2
    '('      shift, and go to state 3

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 146
    sentencia      go to state 6
    variable       go to state 7


State 145

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 14 (deffuncion)


State 146

   27 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 147


State 147

   27 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 148


State 148

   27 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 27 (restoif)
