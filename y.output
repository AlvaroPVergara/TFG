Terminals unused in grammar

    INTEGER
    DOTIMES
    LENGTH
    INCF
    REDUCE


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | '(' condicion
    7          | '(' bucle ')'
    8          | '(' llamada ')'
    9          | '(' deffuncion
   10          | '(' print ')'
   11          | '(' returnfrom ')'

   12 $@1: %empty

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   14 argumentosfun: %empty
   15              | variable argumentosfun

   16 returnfrom: RETURN '-' FROM IDENTIF expresion

   17 definicion: DEFVAR variable restodef
   18           | LET '(' '(' variable restodef ')' ')' instrucciones

   19 restodef: expresion
   20         | '(' MAKE '-' ARRAY expresion ')'

   21 asignacion: SETQ variable expresion
   22           | SETF '(' AREF variable expresion ')' expresion

   23 condicion: IF expresion '(' PROGN instrucciones ')' restoif

   24 restoif: ')'
   25        | '(' PROGN instrucciones ')' ')'

   26 bucle: LOOP WHILE expresion DO instrucciones

   27 llamada: IDENTIF argumentos

   28 argumentos: %empty
   29           | expresion argumentos

   30 print: PRINT restoprint

   31 restoprint: STRING
   32           | expresion

   33 expresion: operando
   34          | '(' '+' expresion expresion ')'
   35          | '(' '-' expresion expresion ')'
   36          | '(' '*' expresion expresion ')'
   37          | '(' '/' expresion expresion ')'
   38          | '(' AND expresion expresion ')'
   39          | '(' OR expresion expresion ')'
   40          | '(' '=' expresion expresion ')'
   41          | '(' '<' expresion expresion ')'
   42          | '(' '>' expresion expresion ')'
   43          | '(' LEQ expresion expresion ')'
   44          | '(' GEQ expresion expresion ')'
   45          | '(' NEQ expresion expresion ')'

   46 operando: NUMBER
   47         | variable

   48 variable: IDENTIF
   49         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 6 7 8 9 10 11 13 18 20 22 23 25 34 35 36 37 38 39 40 41 42 43 44 45
    ')' (41) 4 5 7 8 10 11 13 18 20 22 23 24 25 34 35 36 37 38 39 40 41 42 43 44 45
    '*' (42) 36 49
    '+' (43) 34
    '-' (45) 16 20 35
    '/' (47) 37
    '<' (60) 41
    '=' (61) 40
    '>' (62) 42
    error (256)
    NUMBER (258) 46
    IDENTIF (259) 13 16 27 48 49
    INTEGER (260)
    STRING (261) 31
    DEFVAR (262) 17
    SETQ (263) 21
    SETF (264) 22
    AREF (265) 22
    MAKE (266) 20
    ARRAY (267) 20
    LET (268) 18
    WHILE (269) 26
    LOOP (270) 26
    IF (271) 23
    PROGN (272) 23 25
    DO (273) 26
    PRINT (274) 30
    DEFUN (275) 13
    RETURN (276) 16
    FROM (277) 16
    AND (278) 38
    OR (279) 39
    LEQ (280) 43
    GEQ (281) 44
    NEQ (282) 45
    DOTIMES (283)
    LENGTH (284)
    INCF (285)
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 13 18 23 25 26
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    deffuncion (45)
        on left: 13
        on right: 9
    $@1 (46)
        on left: 12
        on right: 13
    argumentosfun (47)
        on left: 14 15
        on right: 13 15
    returnfrom (48)
        on left: 16
        on right: 11
    definicion (49)
        on left: 17 18
        on right: 4
    restodef (50)
        on left: 19 20
        on right: 17 18
    asignacion (51)
        on left: 21 22
        on right: 5
    condicion (52)
        on left: 23
        on right: 6
    restoif (53)
        on left: 24 25
        on right: 23
    bucle (54)
        on left: 26
        on right: 7
    llamada (55)
        on left: 27
        on right: 8
    argumentos (56)
        on left: 28 29
        on right: 27 29
    print (57)
        on left: 30
        on right: 10
    restoprint (58)
        on left: 31 32
        on right: 30
    expresion (59)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 16 19 20 21 22 23 26 29 32 34 35 36 37 38 39 40 41 42 43 44 45
    operando (60)
        on left: 46 47
        on right: 33
    variable (61)
        on left: 48 49
        on right: 15 17 18 21 22 47


State 0

    0 $accept: . axioma $end

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 2
    instrucciones  go to state 3
    sentencia      go to state 4


State 1

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    6          | '(' . condicion
    7          | '(' . bucle ')'
    8          | '(' . llamada ')'
    9          | '(' . deffuncion
   10          | '(' . print ')'
   11          | '(' . returnfrom ')'

    IDENTIF  shift, and go to state 5
    DEFVAR   shift, and go to state 6
    SETQ     shift, and go to state 7
    SETF     shift, and go to state 8
    LET      shift, and go to state 9
    LOOP     shift, and go to state 10
    IF       shift, and go to state 11
    PRINT    shift, and go to state 12
    DEFUN    shift, and go to state 13
    RETURN   shift, and go to state 14

    deffuncion  go to state 15
    returnfrom  go to state 16
    definicion  go to state 17
    asignacion  go to state 18
    condicion   go to state 19
    bucle       go to state 20
    llamada     go to state 21
    print       go to state 22


State 2

    0 $accept: axioma . $end

    $end  shift, and go to state 23


State 3

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 4

    3 instrucciones: sentencia . instrucciones

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 24
    sentencia      go to state 4


State 5

   27 llamada: IDENTIF . argumentos

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    $default  reduce using rule 28 (argumentos)

    argumentos  go to state 29
    expresion   go to state 30
    operando    go to state 31
    variable    go to state 32


State 6

   17 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 33


State 7

   21 asignacion: SETQ . variable expresion

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 34


State 8

   22 asignacion: SETF . '(' AREF variable expresion ')' expresion

    '('  shift, and go to state 35


State 9

   18 definicion: LET . '(' '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 36


State 10

   26 bucle: LOOP . WHILE expresion DO instrucciones

    WHILE  shift, and go to state 37


State 11

   23 condicion: IF . expresion '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 38
    operando   go to state 31
    variable   go to state 32


State 12

   30 print: PRINT . restoprint

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    STRING   shift, and go to state 39
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    restoprint  go to state 40
    expresion   go to state 41
    operando    go to state 31
    variable    go to state 32


State 13

   13 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 42


State 14

   16 returnfrom: RETURN . '-' FROM IDENTIF expresion

    '-'  shift, and go to state 43


State 15

    9 sentencia: '(' deffuncion .

    $default  reduce using rule 9 (sentencia)


State 16

   11 sentencia: '(' returnfrom . ')'

    ')'  shift, and go to state 44


State 17

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 45


State 18

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 46


State 19

    6 sentencia: '(' condicion .

    $default  reduce using rule 6 (sentencia)


State 20

    7 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 47


State 21

    8 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 48


State 22

   10 sentencia: '(' print . ')'

    ')'  shift, and go to state 49


State 23

    0 $accept: axioma $end .

    $default  accept


State 24

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 25

   46 operando: NUMBER .

    $default  reduce using rule 46 (operando)


State 26

   48 variable: IDENTIF .

    $default  reduce using rule 48 (variable)


State 27

   49 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 50


State 28

   34 expresion: '(' . '+' expresion expresion ')'
   35          | '(' . '-' expresion expresion ')'
   36          | '(' . '*' expresion expresion ')'
   37          | '(' . '/' expresion expresion ')'
   38          | '(' . AND expresion expresion ')'
   39          | '(' . OR expresion expresion ')'
   40          | '(' . '=' expresion expresion ')'
   41          | '(' . '<' expresion expresion ')'
   42          | '(' . '>' expresion expresion ')'
   43          | '(' . LEQ expresion expresion ')'
   44          | '(' . GEQ expresion expresion ')'
   45          | '(' . NEQ expresion expresion ')'

    AND  shift, and go to state 51
    OR   shift, and go to state 52
    LEQ  shift, and go to state 53
    GEQ  shift, and go to state 54
    NEQ  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '='  shift, and go to state 60
    '<'  shift, and go to state 61
    '>'  shift, and go to state 62


State 29

   27 llamada: IDENTIF argumentos .

    $default  reduce using rule 27 (llamada)


State 30

   29 argumentos: expresion . argumentos

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    $default  reduce using rule 28 (argumentos)

    argumentos  go to state 63
    expresion   go to state 30
    operando    go to state 31
    variable    go to state 32


State 31

   33 expresion: operando .

    $default  reduce using rule 33 (expresion)


State 32

   47 operando: variable .

    $default  reduce using rule 47 (operando)


State 33

   17 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 64

    restodef   go to state 65
    expresion  go to state 66
    operando   go to state 31
    variable   go to state 32


State 34

   21 asignacion: SETQ variable . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 67
    operando   go to state 31
    variable   go to state 32


State 35

   22 asignacion: SETF '(' . AREF variable expresion ')' expresion

    AREF  shift, and go to state 68


State 36

   18 definicion: LET '(' . '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 69


State 37

   26 bucle: LOOP WHILE . expresion DO instrucciones

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 70
    operando   go to state 31
    variable   go to state 32


State 38

   23 condicion: IF expresion . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 71


State 39

   31 restoprint: STRING .

    $default  reduce using rule 31 (restoprint)


State 40

   30 print: PRINT restoprint .

    $default  reduce using rule 30 (print)


State 41

   32 restoprint: expresion .

    $default  reduce using rule 32 (restoprint)


State 42

   13 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 72


State 43

   16 returnfrom: RETURN '-' . FROM IDENTIF expresion

    FROM  shift, and go to state 73


State 44

   11 sentencia: '(' returnfrom ')' .

    $default  reduce using rule 11 (sentencia)


State 45

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 46

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 47

    7 sentencia: '(' bucle ')' .

    $default  reduce using rule 7 (sentencia)


State 48

    8 sentencia: '(' llamada ')' .

    $default  reduce using rule 8 (sentencia)


State 49

   10 sentencia: '(' print ')' .

    $default  reduce using rule 10 (sentencia)


State 50

   49 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 74


State 51

   38 expresion: '(' AND . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 75
    operando   go to state 31
    variable   go to state 32


State 52

   39 expresion: '(' OR . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 76
    operando   go to state 31
    variable   go to state 32


State 53

   43 expresion: '(' LEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 77
    operando   go to state 31
    variable   go to state 32


State 54

   44 expresion: '(' GEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 78
    operando   go to state 31
    variable   go to state 32


State 55

   45 expresion: '(' NEQ . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 79
    operando   go to state 31
    variable   go to state 32


State 56

   34 expresion: '(' '+' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 80
    operando   go to state 31
    variable   go to state 32


State 57

   35 expresion: '(' '-' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 81
    operando   go to state 31
    variable   go to state 32


State 58

   36 expresion: '(' '*' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 82
    operando   go to state 31
    variable   go to state 32


State 59

   37 expresion: '(' '/' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 83
    operando   go to state 31
    variable   go to state 32


State 60

   40 expresion: '(' '=' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 84
    operando   go to state 31
    variable   go to state 32


State 61

   41 expresion: '(' '<' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 85
    operando   go to state 31
    variable   go to state 32


State 62

   42 expresion: '(' '>' . expresion expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 86
    operando   go to state 31
    variable   go to state 32


State 63

   29 argumentos: expresion argumentos .

    $default  reduce using rule 29 (argumentos)


State 64

   20 restodef: '(' . MAKE '-' ARRAY expresion ')'
   34 expresion: '(' . '+' expresion expresion ')'
   35          | '(' . '-' expresion expresion ')'
   36          | '(' . '*' expresion expresion ')'
   37          | '(' . '/' expresion expresion ')'
   38          | '(' . AND expresion expresion ')'
   39          | '(' . OR expresion expresion ')'
   40          | '(' . '=' expresion expresion ')'
   41          | '(' . '<' expresion expresion ')'
   42          | '(' . '>' expresion expresion ')'
   43          | '(' . LEQ expresion expresion ')'
   44          | '(' . GEQ expresion expresion ')'
   45          | '(' . NEQ expresion expresion ')'

    MAKE  shift, and go to state 87
    AND   shift, and go to state 51
    OR    shift, and go to state 52
    LEQ   shift, and go to state 53
    GEQ   shift, and go to state 54
    NEQ   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    '*'   shift, and go to state 58
    '/'   shift, and go to state 59
    '='   shift, and go to state 60
    '<'   shift, and go to state 61
    '>'   shift, and go to state 62


State 65

   17 definicion: DEFVAR variable restodef .

    $default  reduce using rule 17 (definicion)


State 66

   19 restodef: expresion .

    $default  reduce using rule 19 (restodef)


State 67

   21 asignacion: SETQ variable expresion .

    $default  reduce using rule 21 (asignacion)


State 68

   22 asignacion: SETF '(' AREF . variable expresion ')' expresion

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 88


State 69

   18 definicion: LET '(' '(' . variable restodef ')' ')' instrucciones

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    variable  go to state 89


State 70

   26 bucle: LOOP WHILE expresion . DO instrucciones

    DO  shift, and go to state 90


State 71

   23 condicion: IF expresion '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 91


State 72

   13 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 92


State 73

   16 returnfrom: RETURN '-' FROM . IDENTIF expresion

    IDENTIF  shift, and go to state 93


State 74

   49 variable: '*' IDENTIF '*' .

    $default  reduce using rule 49 (variable)


State 75

   38 expresion: '(' AND expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 94
    operando   go to state 31
    variable   go to state 32


State 76

   39 expresion: '(' OR expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 95
    operando   go to state 31
    variable   go to state 32


State 77

   43 expresion: '(' LEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 96
    operando   go to state 31
    variable   go to state 32


State 78

   44 expresion: '(' GEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 97
    operando   go to state 31
    variable   go to state 32


State 79

   45 expresion: '(' NEQ expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 98
    operando   go to state 31
    variable   go to state 32


State 80

   34 expresion: '(' '+' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 99
    operando   go to state 31
    variable   go to state 32


State 81

   35 expresion: '(' '-' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 100
    operando   go to state 31
    variable   go to state 32


State 82

   36 expresion: '(' '*' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 101
    operando   go to state 31
    variable   go to state 32


State 83

   37 expresion: '(' '/' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 102
    operando   go to state 31
    variable   go to state 32


State 84

   40 expresion: '(' '=' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 103
    operando   go to state 31
    variable   go to state 32


State 85

   41 expresion: '(' '<' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 104
    operando   go to state 31
    variable   go to state 32


State 86

   42 expresion: '(' '>' expresion . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 105
    operando   go to state 31
    variable   go to state 32


State 87

   20 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 106


State 88

   22 asignacion: SETF '(' AREF variable . expresion ')' expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 107
    operando   go to state 31
    variable   go to state 32


State 89

   18 definicion: LET '(' '(' variable . restodef ')' ')' instrucciones

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 64

    restodef   go to state 108
    expresion  go to state 66
    operando   go to state 31
    variable   go to state 32


State 90

   26 bucle: LOOP WHILE expresion DO . instrucciones

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 109
    sentencia      go to state 4


State 91

   23 condicion: IF expresion '(' PROGN . instrucciones ')' restoif

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 110
    sentencia      go to state 4


State 92

   13 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 111
    variable       go to state 112


State 93

   16 returnfrom: RETURN '-' FROM IDENTIF . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 113
    operando   go to state 31
    variable   go to state 32


State 94

   38 expresion: '(' AND expresion expresion . ')'

    ')'  shift, and go to state 114


State 95

   39 expresion: '(' OR expresion expresion . ')'

    ')'  shift, and go to state 115


State 96

   43 expresion: '(' LEQ expresion expresion . ')'

    ')'  shift, and go to state 116


State 97

   44 expresion: '(' GEQ expresion expresion . ')'

    ')'  shift, and go to state 117


State 98

   45 expresion: '(' NEQ expresion expresion . ')'

    ')'  shift, and go to state 118


State 99

   34 expresion: '(' '+' expresion expresion . ')'

    ')'  shift, and go to state 119


State 100

   35 expresion: '(' '-' expresion expresion . ')'

    ')'  shift, and go to state 120


State 101

   36 expresion: '(' '*' expresion expresion . ')'

    ')'  shift, and go to state 121


State 102

   37 expresion: '(' '/' expresion expresion . ')'

    ')'  shift, and go to state 122


State 103

   40 expresion: '(' '=' expresion expresion . ')'

    ')'  shift, and go to state 123


State 104

   41 expresion: '(' '<' expresion expresion . ')'

    ')'  shift, and go to state 124


State 105

   42 expresion: '(' '>' expresion expresion . ')'

    ')'  shift, and go to state 125


State 106

   20 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 126


State 107

   22 asignacion: SETF '(' AREF variable expresion . ')' expresion

    ')'  shift, and go to state 127


State 108

   18 definicion: LET '(' '(' variable restodef . ')' ')' instrucciones

    ')'  shift, and go to state 128


State 109

   26 bucle: LOOP WHILE expresion DO instrucciones .

    $default  reduce using rule 26 (bucle)


State 110

   23 condicion: IF expresion '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 129


State 111

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 130


State 112

   15 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27

    $default  reduce using rule 14 (argumentosfun)

    argumentosfun  go to state 131
    variable       go to state 112


State 113

   16 returnfrom: RETURN '-' FROM IDENTIF expresion .

    $default  reduce using rule 16 (returnfrom)


State 114

   38 expresion: '(' AND expresion expresion ')' .

    $default  reduce using rule 38 (expresion)


State 115

   39 expresion: '(' OR expresion expresion ')' .

    $default  reduce using rule 39 (expresion)


State 116

   43 expresion: '(' LEQ expresion expresion ')' .

    $default  reduce using rule 43 (expresion)


State 117

   44 expresion: '(' GEQ expresion expresion ')' .

    $default  reduce using rule 44 (expresion)


State 118

   45 expresion: '(' NEQ expresion expresion ')' .

    $default  reduce using rule 45 (expresion)


State 119

   34 expresion: '(' '+' expresion expresion ')' .

    $default  reduce using rule 34 (expresion)


State 120

   35 expresion: '(' '-' expresion expresion ')' .

    $default  reduce using rule 35 (expresion)


State 121

   36 expresion: '(' '*' expresion expresion ')' .

    $default  reduce using rule 36 (expresion)


State 122

   37 expresion: '(' '/' expresion expresion ')' .

    $default  reduce using rule 37 (expresion)


State 123

   40 expresion: '(' '=' expresion expresion ')' .

    $default  reduce using rule 40 (expresion)


State 124

   41 expresion: '(' '<' expresion expresion ')' .

    $default  reduce using rule 41 (expresion)


State 125

   42 expresion: '(' '>' expresion expresion ')' .

    $default  reduce using rule 42 (expresion)


State 126

   20 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 132
    operando   go to state 31
    variable   go to state 32


State 127

   22 asignacion: SETF '(' AREF variable expresion ')' . expresion

    NUMBER   shift, and go to state 25
    IDENTIF  shift, and go to state 26
    '*'      shift, and go to state 27
    '('      shift, and go to state 28

    expresion  go to state 133
    operando   go to state 31
    variable   go to state 32


State 128

   18 definicion: LET '(' '(' variable restodef ')' . ')' instrucciones

    ')'  shift, and go to state 134


State 129

   23 condicion: IF expresion '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 135
    ')'  shift, and go to state 136

    restoif  go to state 137


State 130

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 138
    sentencia      go to state 4


State 131

   15 argumentosfun: variable argumentosfun .

    $default  reduce using rule 15 (argumentosfun)


State 132

   20 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 139


State 133

   22 asignacion: SETF '(' AREF variable expresion ')' expresion .

    $default  reduce using rule 22 (asignacion)


State 134

   18 definicion: LET '(' '(' variable restodef ')' ')' . instrucciones

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 140
    sentencia      go to state 4


State 135

   25 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 141


State 136

   24 restoif: ')' .

    $default  reduce using rule 24 (restoif)


State 137

   23 condicion: IF expresion '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 23 (condicion)


State 138

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 142


State 139

   20 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 20 (restodef)


State 140

   18 definicion: LET '(' '(' variable restodef ')' ')' instrucciones .

    $default  reduce using rule 18 (definicion)


State 141

   25 restoif: '(' PROGN . instrucciones ')' ')'

    '('  shift, and go to state 1

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 143
    sentencia      go to state 4


State 142

   13 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 13 (deffuncion)


State 143

   25 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 144


State 144

   25 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 145


State 145

   25 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 25 (restoif)
