Terminals unused in grammar

    INTEGER
    FROM
    DOTIMES
    LENGTH
    INCF
    REDUCE


State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: axioma $end

    1 axioma: instrucciones

    2 instrucciones: %empty
    3              | sentencia instrucciones

    4 sentencia: '(' definicion ')'
    5          | '(' asignacion ')'
    6          | expresion
    7          | '(' condicion
    8          | '(' bucle ')'
    9          | '(' llamada ')'
   10          | '(' deffuncion
   11          | PRINT STRING
   12          | RETURN sentencia

   13 $@1: %empty

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

   15 argumentosfun: %empty
   16              | variable argumentosfun

   17 definicion: DEFVAR variable restodef
   18           | LET '(' '(' variable restodef ')' ')' instrucciones

   19 restodef: expresion
   20         | '(' MAKE '-' ARRAY expresion ')'

   21 asignacion: SETQ variable sentencia
   22           | SETF '(' AREF variable expresion ')' sentencia

   23 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' restoif

   24 restoif: ')'
   25        | '(' PROGN instrucciones ')' ')'

   26 bucle: LOOP WHILE '(' expresion ')' DO instrucciones

   27 llamada: IDENTIF '(' instrucciones ')'

   28 expresion: operando
   29          | '+' expresion expresion
   30          | '-' expresion expresion
   31          | '*' expresion expresion
   32          | '/' expresion expresion
   33          | AND expresion expresion
   34          | OR expresion expresion
   35          | '=' expresion expresion
   36          | '<' expresion expresion
   37          | '>' expresion expresion
   38          | LEQ expresion expresion
   39          | GEQ expresion expresion
   40          | NEQ expresion expresion

   41 operando: NUMBER
   42         | variable
   43         | '(' expresion ')'

   44 variable: IDENTIF
   45         | '*' IDENTIF '*'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 5 7 8 9 10 14 18 20 22 23 25 26 27 43
    ')' (41) 4 5 8 9 14 18 20 22 23 24 25 26 27 43
    '*' (42) 31 45
    '+' (43) 29
    '-' (45) 20 30
    '/' (47) 32
    '<' (60) 36
    '=' (61) 35
    '>' (62) 37
    error (256)
    NUMBER (258) 41
    IDENTIF (259) 14 27 44 45
    INTEGER (260)
    STRING (261) 11
    DEFVAR (262) 17
    SETQ (263) 21
    SETF (264) 22
    AREF (265) 22
    MAKE (266) 20
    ARRAY (267) 20
    LET (268) 18
    WHILE (269) 26
    LOOP (270) 26
    IF (271) 23
    PROGN (272) 23 25
    DO (273) 26
    PRINT (274) 11
    DEFUN (275) 14
    RETURN (276) 12
    FROM (277)
    AND (278) 33
    OR (279) 34
    LEQ (280) 38
    GEQ (281) 39
    NEQ (282) 40
    DOTIMES (283)
    LENGTH (284)
    INCF (285)
    REDUCE (286)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    axioma (42)
        on left: 1
        on right: 0
    instrucciones (43)
        on left: 2 3
        on right: 1 3 14 18 23 25 26 27
    sentencia (44)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3 12 21 22
    deffuncion (45)
        on left: 14
        on right: 10
    $@1 (46)
        on left: 13
        on right: 14
    argumentosfun (47)
        on left: 15 16
        on right: 14 16
    definicion (48)
        on left: 17 18
        on right: 4
    restodef (49)
        on left: 19 20
        on right: 17 18
    asignacion (50)
        on left: 21 22
        on right: 5
    condicion (51)
        on left: 23
        on right: 7
    restoif (52)
        on left: 24 25
        on right: 23
    bucle (53)
        on left: 26
        on right: 8
    llamada (54)
        on left: 27
        on right: 9
    expresion (55)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 6 19 20 22 23 26 29 30 31 32 33 34 35 36 37 38 39 40 43
    operando (56)
        on left: 41 42 43
        on right: 28
    variable (57)
        on left: 44 45
        on right: 16 17 18 21 22 42


State 0

    0 $accept: . axioma $end

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    axioma         go to state 18
    instrucciones  go to state 19
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 1

   41 operando: NUMBER .

    $default  reduce using rule 41 (operando)


State 2

   44 variable: IDENTIF .

    $default  reduce using rule 44 (variable)


State 3

   11 sentencia: PRINT . STRING

    STRING  shift, and go to state 24


State 4

   12 sentencia: RETURN . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 25
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 5

   33 expresion: AND . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 27
    operando   go to state 22
    variable   go to state 23


State 6

   34 expresion: OR . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 28
    operando   go to state 22
    variable   go to state 23


State 7

   38 expresion: LEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 29
    operando   go to state 22
    variable   go to state 23


State 8

   39 expresion: GEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 30
    operando   go to state 22
    variable   go to state 23


State 9

   40 expresion: NEQ . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 31
    operando   go to state 22
    variable   go to state 23


State 10

   29 expresion: '+' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 32
    operando   go to state 22
    variable   go to state 23


State 11

   30 expresion: '-' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 33
    operando   go to state 22
    variable   go to state 23


State 12

   31 expresion: '*' . expresion expresion
   45 variable: '*' . IDENTIF '*'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 34
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 35
    operando   go to state 22
    variable   go to state 23


State 13

   32 expresion: '/' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 36
    operando   go to state 22
    variable   go to state 23


State 14

   35 expresion: '=' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 37
    operando   go to state 22
    variable   go to state 23


State 15

   36 expresion: '<' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 38
    operando   go to state 22
    variable   go to state 23


State 16

   37 expresion: '>' . expresion expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 39
    operando   go to state 22
    variable   go to state 23


State 17

    4 sentencia: '(' . definicion ')'
    5          | '(' . asignacion ')'
    7          | '(' . condicion
    8          | '(' . bucle ')'
    9          | '(' . llamada ')'
   10          | '(' . deffuncion
   43 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 40
    DEFVAR   shift, and go to state 41
    SETQ     shift, and go to state 42
    SETF     shift, and go to state 43
    LET      shift, and go to state 44
    LOOP     shift, and go to state 45
    IF       shift, and go to state 46
    DEFUN    shift, and go to state 47
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    deffuncion  go to state 48
    definicion  go to state 49
    asignacion  go to state 50
    condicion   go to state 51
    bucle       go to state 52
    llamada     go to state 53
    expresion   go to state 54
    operando    go to state 22
    variable    go to state 23


State 18

    0 $accept: axioma . $end

    $end  shift, and go to state 55


State 19

    1 axioma: instrucciones .

    $default  reduce using rule 1 (axioma)


State 20

    3 instrucciones: sentencia . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 56
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 21

    6 sentencia: expresion .

    $default  reduce using rule 6 (sentencia)


State 22

   28 expresion: operando .

    $default  reduce using rule 28 (expresion)


State 23

   42 operando: variable .

    $default  reduce using rule 42 (operando)


State 24

   11 sentencia: PRINT STRING .

    $default  reduce using rule 11 (sentencia)


State 25

   12 sentencia: RETURN sentencia .

    $default  reduce using rule 12 (sentencia)


State 26

   43 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 54
    operando   go to state 22
    variable   go to state 23


State 27

   33 expresion: AND expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 57
    operando   go to state 22
    variable   go to state 23


State 28

   34 expresion: OR expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 58
    operando   go to state 22
    variable   go to state 23


State 29

   38 expresion: LEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 59
    operando   go to state 22
    variable   go to state 23


State 30

   39 expresion: GEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 60
    operando   go to state 22
    variable   go to state 23


State 31

   40 expresion: NEQ expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 61
    operando   go to state 22
    variable   go to state 23


State 32

   29 expresion: '+' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 62
    operando   go to state 22
    variable   go to state 23


State 33

   30 expresion: '-' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 63
    operando   go to state 22
    variable   go to state 23


State 34

   44 variable: IDENTIF .
   45         | '*' IDENTIF . '*'

    '*'  shift, and go to state 64

    '*'       [reduce using rule 44 (variable)]
    $default  reduce using rule 44 (variable)


State 35

   31 expresion: '*' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 65
    operando   go to state 22
    variable   go to state 23


State 36

   32 expresion: '/' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 66
    operando   go to state 22
    variable   go to state 23


State 37

   35 expresion: '=' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 67
    operando   go to state 22
    variable   go to state 23


State 38

   36 expresion: '<' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 68
    operando   go to state 22
    variable   go to state 23


State 39

   37 expresion: '>' expresion . expresion

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 69
    operando   go to state 22
    variable   go to state 23


State 40

   27 llamada: IDENTIF . '(' instrucciones ')'
   44 variable: IDENTIF .

    '('  shift, and go to state 70

    $default  reduce using rule 44 (variable)


State 41

   17 definicion: DEFVAR . variable restodef

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 72


State 42

   21 asignacion: SETQ . variable sentencia

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 73


State 43

   22 asignacion: SETF . '(' AREF variable expresion ')' sentencia

    '('  shift, and go to state 74


State 44

   18 definicion: LET . '(' '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 75


State 45

   26 bucle: LOOP . WHILE '(' expresion ')' DO instrucciones

    WHILE  shift, and go to state 76


State 46

   23 condicion: IF . '(' expresion ')' '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 77


State 47

   14 deffuncion: DEFUN . IDENTIF $@1 '(' argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 78


State 48

   10 sentencia: '(' deffuncion .

    $default  reduce using rule 10 (sentencia)


State 49

    4 sentencia: '(' definicion . ')'

    ')'  shift, and go to state 79


State 50

    5 sentencia: '(' asignacion . ')'

    ')'  shift, and go to state 80


State 51

    7 sentencia: '(' condicion .

    $default  reduce using rule 7 (sentencia)


State 52

    8 sentencia: '(' bucle . ')'

    ')'  shift, and go to state 81


State 53

    9 sentencia: '(' llamada . ')'

    ')'  shift, and go to state 82


State 54

   43 operando: '(' expresion . ')'

    ')'  shift, and go to state 83


State 55

    0 $accept: axioma $end .

    $default  accept


State 56

    3 instrucciones: sentencia instrucciones .

    $default  reduce using rule 3 (instrucciones)


State 57

   33 expresion: AND expresion expresion .

    $default  reduce using rule 33 (expresion)


State 58

   34 expresion: OR expresion expresion .

    $default  reduce using rule 34 (expresion)


State 59

   38 expresion: LEQ expresion expresion .

    $default  reduce using rule 38 (expresion)


State 60

   39 expresion: GEQ expresion expresion .

    $default  reduce using rule 39 (expresion)


State 61

   40 expresion: NEQ expresion expresion .

    $default  reduce using rule 40 (expresion)


State 62

   29 expresion: '+' expresion expresion .

    $default  reduce using rule 29 (expresion)


State 63

   30 expresion: '-' expresion expresion .

    $default  reduce using rule 30 (expresion)


State 64

   45 variable: '*' IDENTIF '*' .

    $default  reduce using rule 45 (variable)


State 65

   31 expresion: '*' expresion expresion .

    $default  reduce using rule 31 (expresion)


State 66

   32 expresion: '/' expresion expresion .

    $default  reduce using rule 32 (expresion)


State 67

   35 expresion: '=' expresion expresion .

    $default  reduce using rule 35 (expresion)


State 68

   36 expresion: '<' expresion expresion .

    $default  reduce using rule 36 (expresion)


State 69

   37 expresion: '>' expresion expresion .

    $default  reduce using rule 37 (expresion)


State 70

   27 llamada: IDENTIF '(' . instrucciones ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 84
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 71

   45 variable: '*' . IDENTIF '*'

    IDENTIF  shift, and go to state 85


State 72

   17 definicion: DEFVAR variable . restodef

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 86

    restodef   go to state 87
    expresion  go to state 88
    operando   go to state 22
    variable   go to state 23


State 73

   21 asignacion: SETQ variable . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 89
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 74

   22 asignacion: SETF '(' . AREF variable expresion ')' sentencia

    AREF  shift, and go to state 90


State 75

   18 definicion: LET '(' . '(' variable restodef ')' ')' instrucciones

    '('  shift, and go to state 91


State 76

   26 bucle: LOOP WHILE . '(' expresion ')' DO instrucciones

    '('  shift, and go to state 92


State 77

   23 condicion: IF '(' . expresion ')' '(' PROGN instrucciones ')' restoif

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 93
    operando   go to state 22
    variable   go to state 23


State 78

   14 deffuncion: DEFUN IDENTIF . $@1 '(' argumentosfun ')' instrucciones ')'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 94


State 79

    4 sentencia: '(' definicion ')' .

    $default  reduce using rule 4 (sentencia)


State 80

    5 sentencia: '(' asignacion ')' .

    $default  reduce using rule 5 (sentencia)


State 81

    8 sentencia: '(' bucle ')' .

    $default  reduce using rule 8 (sentencia)


State 82

    9 sentencia: '(' llamada ')' .

    $default  reduce using rule 9 (sentencia)


State 83

   43 operando: '(' expresion ')' .

    $default  reduce using rule 43 (operando)


State 84

   27 llamada: IDENTIF '(' instrucciones . ')'

    ')'  shift, and go to state 95


State 85

   45 variable: '*' IDENTIF . '*'

    '*'  shift, and go to state 64


State 86

   20 restodef: '(' . MAKE '-' ARRAY expresion ')'
   43 operando: '(' . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    MAKE     shift, and go to state 96
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 54
    operando   go to state 22
    variable   go to state 23


State 87

   17 definicion: DEFVAR variable restodef .

    $default  reduce using rule 17 (definicion)


State 88

   19 restodef: expresion .

    $default  reduce using rule 19 (restodef)


State 89

   21 asignacion: SETQ variable sentencia .

    $default  reduce using rule 21 (asignacion)


State 90

   22 asignacion: SETF '(' AREF . variable expresion ')' sentencia

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 97


State 91

   18 definicion: LET '(' '(' . variable restodef ')' ')' instrucciones

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    variable  go to state 98


State 92

   26 bucle: LOOP WHILE '(' . expresion ')' DO instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 99
    operando   go to state 22
    variable   go to state 23


State 93

   23 condicion: IF '(' expresion . ')' '(' PROGN instrucciones ')' restoif

    ')'  shift, and go to state 100


State 94

   14 deffuncion: DEFUN IDENTIF $@1 . '(' argumentosfun ')' instrucciones ')'

    '('  shift, and go to state 101


State 95

   27 llamada: IDENTIF '(' instrucciones ')' .

    $default  reduce using rule 27 (llamada)


State 96

   20 restodef: '(' MAKE . '-' ARRAY expresion ')'

    '-'  shift, and go to state 102


State 97

   22 asignacion: SETF '(' AREF variable . expresion ')' sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 103
    operando   go to state 22
    variable   go to state 23


State 98

   18 definicion: LET '(' '(' variable . restodef ')' ')' instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 86

    restodef   go to state 104
    expresion  go to state 88
    operando   go to state 22
    variable   go to state 23


State 99

   26 bucle: LOOP WHILE '(' expresion . ')' DO instrucciones

    ')'  shift, and go to state 105


State 100

   23 condicion: IF '(' expresion ')' . '(' PROGN instrucciones ')' restoif

    '('  shift, and go to state 106


State 101

   14 deffuncion: DEFUN IDENTIF $@1 '(' . argumentosfun ')' instrucciones ')'

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    $default  reduce using rule 15 (argumentosfun)

    argumentosfun  go to state 107
    variable       go to state 108


State 102

   20 restodef: '(' MAKE '-' . ARRAY expresion ')'

    ARRAY  shift, and go to state 109


State 103

   22 asignacion: SETF '(' AREF variable expresion . ')' sentencia

    ')'  shift, and go to state 110


State 104

   18 definicion: LET '(' '(' variable restodef . ')' ')' instrucciones

    ')'  shift, and go to state 111


State 105

   26 bucle: LOOP WHILE '(' expresion ')' . DO instrucciones

    DO  shift, and go to state 112


State 106

   23 condicion: IF '(' expresion ')' '(' . PROGN instrucciones ')' restoif

    PROGN  shift, and go to state 113


State 107

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun . ')' instrucciones ')'

    ')'  shift, and go to state 114


State 108

   16 argumentosfun: variable . argumentosfun

    IDENTIF  shift, and go to state 2
    '*'      shift, and go to state 71

    $default  reduce using rule 15 (argumentosfun)

    argumentosfun  go to state 115
    variable       go to state 108


State 109

   20 restodef: '(' MAKE '-' ARRAY . expresion ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 26

    expresion  go to state 116
    operando   go to state 22
    variable   go to state 23


State 110

   22 asignacion: SETF '(' AREF variable expresion ')' . sentencia

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    sentencia  go to state 117
    expresion  go to state 21
    operando   go to state 22
    variable   go to state 23


State 111

   18 definicion: LET '(' '(' variable restodef ')' . ')' instrucciones

    ')'  shift, and go to state 118


State 112

   26 bucle: LOOP WHILE '(' expresion ')' DO . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 119
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 113

   23 condicion: IF '(' expresion ')' '(' PROGN . instrucciones ')' restoif

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 120
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 114

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' . instrucciones ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 121
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 115

   16 argumentosfun: variable argumentosfun .

    $default  reduce using rule 16 (argumentosfun)


State 116

   20 restodef: '(' MAKE '-' ARRAY expresion . ')'

    ')'  shift, and go to state 122


State 117

   22 asignacion: SETF '(' AREF variable expresion ')' sentencia .

    $default  reduce using rule 22 (asignacion)


State 118

   18 definicion: LET '(' '(' variable restodef ')' ')' . instrucciones

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 123
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 119

   26 bucle: LOOP WHILE '(' expresion ')' DO instrucciones .

    $default  reduce using rule 26 (bucle)


State 120

   23 condicion: IF '(' expresion ')' '(' PROGN instrucciones . ')' restoif

    ')'  shift, and go to state 124


State 121

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones . ')'

    ')'  shift, and go to state 125


State 122

   20 restodef: '(' MAKE '-' ARRAY expresion ')' .

    $default  reduce using rule 20 (restodef)


State 123

   18 definicion: LET '(' '(' variable restodef ')' ')' instrucciones .

    $default  reduce using rule 18 (definicion)


State 124

   23 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' . restoif

    '('  shift, and go to state 126
    ')'  shift, and go to state 127

    restoif  go to state 128


State 125

   14 deffuncion: DEFUN IDENTIF $@1 '(' argumentosfun ')' instrucciones ')' .

    $default  reduce using rule 14 (deffuncion)


State 126

   25 restoif: '(' . PROGN instrucciones ')' ')'

    PROGN  shift, and go to state 129


State 127

   24 restoif: ')' .

    $default  reduce using rule 24 (restoif)


State 128

   23 condicion: IF '(' expresion ')' '(' PROGN instrucciones ')' restoif .

    $default  reduce using rule 23 (condicion)


State 129

   25 restoif: '(' PROGN . instrucciones ')' ')'

    NUMBER   shift, and go to state 1
    IDENTIF  shift, and go to state 2
    PRINT    shift, and go to state 3
    RETURN   shift, and go to state 4
    AND      shift, and go to state 5
    OR       shift, and go to state 6
    LEQ      shift, and go to state 7
    GEQ      shift, and go to state 8
    NEQ      shift, and go to state 9
    '+'      shift, and go to state 10
    '-'      shift, and go to state 11
    '*'      shift, and go to state 12
    '/'      shift, and go to state 13
    '='      shift, and go to state 14
    '<'      shift, and go to state 15
    '>'      shift, and go to state 16
    '('      shift, and go to state 17

    $default  reduce using rule 2 (instrucciones)

    instrucciones  go to state 130
    sentencia      go to state 20
    expresion      go to state 21
    operando       go to state 22
    variable       go to state 23


State 130

   25 restoif: '(' PROGN instrucciones . ')' ')'

    ')'  shift, and go to state 131


State 131

   25 restoif: '(' PROGN instrucciones ')' . ')'

    ')'  shift, and go to state 132


State 132

   25 restoif: '(' PROGN instrucciones ')' ')' .

    $default  reduce using rule 25 (restoif)
